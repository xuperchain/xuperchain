syntax = "proto3";

package pb;

import "xchain.proto";

service PubsubService {
  rpc Subscribe (EventRequest) returns (stream EventResponse);
  rpc UnSubscribe (EventRequest) returns (EventResponse);
}

enum BlockStatus {
  ERROR = 0;
  TRUNK = 1;
  BRANCH = 2;
  NONEXIST = 3;
}

/////// 事件订阅请求数据结构
// BlockEventRequest 订阅区块请求
message BlockEventRequest {
  string bc_name = 1;
  string proposer = 2;
  int64 start_height = 3;
  int64 end_height = 4;
  bool need_content = 5;
}

// TransactionEventRequest 订阅交易请求
message TransactionEventRequest {
  string bc_name = 1;
  string initiator = 2;
  repeated string auth_require = 3;
  bool need_content = 4;
}

// AccountEventRequest 订阅账户请求
message AccountEventRequest {
  string from_addr = 1;
  string to_addr = 2;
  bool need_content = 3;
}

// UnSubscribeRequest 取消事件订阅请求
message UnSubscribeRequest {
  string event_id = 1;
}

// EventRequest 将上述几种事件订阅统一归为EventRequest
message EventRequest {
  EventType event_type = 1;
  bytes event_request = 2;
}

//////// 事件订阅返回数据结构
// SubscribeResponse 订阅产生的event_id
message SubscribeResponse {
  EventRequest event_request = 1;
}

message UnSubscribeResponse {
  UnSubscribeStatusInfo status = 1;
}

// BlockEventResponse 订阅区块返回
message BlockEventResponse {
  BlockStatusInfo status = 1;
  InternalBlock block = 2;
}

// TransactionEventResponse 订阅交易返回
message TransactionEventResponse {
  TransactionStatusInfo status = 1;
  Transaction tx = 2;
}

// AccountEventResponse 订阅账户返回
message AccountEventResponse {
  AccountStatusInfo status = 1;
  Transaction tx = 2;
}

////// EventResponse 将上述几类统一归为EventResponse
message EventResponse {
  string event_id = 1;
  EventType event_type = 2;
  bytes event_response = 3;
}

///// 状态信息
enum EventType {
  NULL_EVENT = 0;
  BLOCK_EVENT = 1;
  TRANSACTION_EVENT = 2;
  ACCOUNT_EVENT = 3;
  UNSUBSCRIBE_EVENT = 4;
}

// BlockStatusInfo 区块元数据
message BlockStatusInfo {
  string bc_name = 1;
  BlockStatus status = 2;
}

message TransactionStatusInfo {
  string bc_name = 1;
  string initiator = 2;
  TransactionStatus status = 3;
}

message AccountStatusInfo {
  string bc_name = 1;
  TransactionStatus status = 2;
}

enum UnSubscribeStatusInfo {
  UNSUBSCRIBE_UNDEFINED = 0;
  UNSUBSCRIBE_SUCCESS = 1;
  UNSUBSCRIBE_FAILED = 2;
}
