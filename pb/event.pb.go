// Code generated by protoc-gen-go. DO NOT EDIT.
// source: event.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

///// 状态信息
type EventType int32

const (
	EventType_DEFAULT_EVENT     EventType = 0
	EventType_SUBSCRIBE_EVENT   EventType = 1
	EventType_UNSUBSCRIBE_EVENT EventType = 2
	EventType_BLOCK_EVENT       EventType = 3
	EventType_TRANSACTION_EVENT EventType = 4
	EventType_ACCOUNT_EVENT     EventType = 5
)

var EventType_name = map[int32]string{
	0: "DEFAULT_EVENT",
	1: "SUBSCRIBE_EVENT",
	2: "UNSUBSCRIBE_EVENT",
	3: "BLOCK_EVENT",
	4: "TRANSACTION_EVENT",
	5: "ACCOUNT_EVENT",
}

var EventType_value = map[string]int32{
	"DEFAULT_EVENT":     0,
	"SUBSCRIBE_EVENT":   1,
	"UNSUBSCRIBE_EVENT": 2,
	"BLOCK_EVENT":       3,
	"TRANSACTION_EVENT": 4,
	"ACCOUNT_EVENT":     5,
}

func (x EventType) String() string {
	return proto.EnumName(EventType_name, int32(x))
}

func (EventType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{0}
}

type BlockStatusInfo_EBlockStatus int32

const (
	BlockStatusInfo_ERROR    BlockStatusInfo_EBlockStatus = 0
	BlockStatusInfo_TRUNK    BlockStatusInfo_EBlockStatus = 1
	BlockStatusInfo_BRANCH   BlockStatusInfo_EBlockStatus = 2
	BlockStatusInfo_NONEXIST BlockStatusInfo_EBlockStatus = 3
)

var BlockStatusInfo_EBlockStatus_name = map[int32]string{
	0: "ERROR",
	1: "TRUNK",
	2: "BRANCH",
	3: "NONEXIST",
}

var BlockStatusInfo_EBlockStatus_value = map[string]int32{
	"ERROR":    0,
	"TRUNK":    1,
	"BRANCH":   2,
	"NONEXIST": 3,
}

func (x BlockStatusInfo_EBlockStatus) String() string {
	return proto.EnumName(BlockStatusInfo_EBlockStatus_name, int32(x))
}

func (BlockStatusInfo_EBlockStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{11, 0}
}

type TransactionStatusInfo_ETransactionStatus int32

const (
	TransactionStatusInfo_UNDEFINE  TransactionStatusInfo_ETransactionStatus = 0
	TransactionStatusInfo_CONFIRM   TransactionStatusInfo_ETransactionStatus = 1
	TransactionStatusInfo_FURCATION TransactionStatusInfo_ETransactionStatus = 2
	TransactionStatusInfo_FAILED    TransactionStatusInfo_ETransactionStatus = 3
	TransactionStatusInfo_UNCONFIRM TransactionStatusInfo_ETransactionStatus = 4
)

var TransactionStatusInfo_ETransactionStatus_name = map[int32]string{
	0: "UNDEFINE",
	1: "CONFIRM",
	2: "FURCATION",
	3: "FAILED",
	4: "UNCONFIRM",
}

var TransactionStatusInfo_ETransactionStatus_value = map[string]int32{
	"UNDEFINE":  0,
	"CONFIRM":   1,
	"FURCATION": 2,
	"FAILED":    3,
	"UNCONFIRM": 4,
}

func (x TransactionStatusInfo_ETransactionStatus) String() string {
	return proto.EnumName(TransactionStatusInfo_ETransactionStatus_name, int32(x))
}

func (TransactionStatusInfo_ETransactionStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{12, 0}
}

type AccountStatusInfo_ETransactionStatus int32

const (
	AccountStatusInfo_UNDEFINE  AccountStatusInfo_ETransactionStatus = 0
	AccountStatusInfo_CONFIRM   AccountStatusInfo_ETransactionStatus = 1
	AccountStatusInfo_FURCATION AccountStatusInfo_ETransactionStatus = 2
	AccountStatusInfo_FAILED    AccountStatusInfo_ETransactionStatus = 3
	AccountStatusInfo_UNCONFIRM AccountStatusInfo_ETransactionStatus = 4
)

var AccountStatusInfo_ETransactionStatus_name = map[int32]string{
	0: "UNDEFINE",
	1: "CONFIRM",
	2: "FURCATION",
	3: "FAILED",
	4: "UNCONFIRM",
}

var AccountStatusInfo_ETransactionStatus_value = map[string]int32{
	"UNDEFINE":  0,
	"CONFIRM":   1,
	"FURCATION": 2,
	"FAILED":    3,
	"UNCONFIRM": 4,
}

func (x AccountStatusInfo_ETransactionStatus) String() string {
	return proto.EnumName(AccountStatusInfo_ETransactionStatus_name, int32(x))
}

func (AccountStatusInfo_ETransactionStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{13, 0}
}

//// EventMessage producer msg
type EventMessage struct {
	// Types that are valid to be assigned to Type:
	//	*EventMessage_Tx
	//	*EventMessage_Block
	Type                 isEventMessage_Type `protobuf_oneof:"Type"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *EventMessage) Reset()         { *m = EventMessage{} }
func (m *EventMessage) String() string { return proto.CompactTextString(m) }
func (*EventMessage) ProtoMessage()    {}
func (*EventMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{0}
}

func (m *EventMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventMessage.Unmarshal(m, b)
}
func (m *EventMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventMessage.Marshal(b, m, deterministic)
}
func (m *EventMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventMessage.Merge(m, src)
}
func (m *EventMessage) XXX_Size() int {
	return xxx_messageInfo_EventMessage.Size(m)
}
func (m *EventMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_EventMessage.DiscardUnknown(m)
}

var xxx_messageInfo_EventMessage proto.InternalMessageInfo

type isEventMessage_Type interface {
	isEventMessage_Type()
}

type EventMessage_Tx struct {
	Tx *Transaction `protobuf:"bytes,1,opt,name=tx,proto3,oneof"`
}

type EventMessage_Block struct {
	Block *InternalBlock `protobuf:"bytes,2,opt,name=block,proto3,oneof"`
}

func (*EventMessage_Tx) isEventMessage_Type() {}

func (*EventMessage_Block) isEventMessage_Type() {}

func (m *EventMessage) GetType() isEventMessage_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *EventMessage) GetTx() *Transaction {
	if x, ok := m.GetType().(*EventMessage_Tx); ok {
		return x.Tx
	}
	return nil
}

func (m *EventMessage) GetBlock() *InternalBlock {
	if x, ok := m.GetType().(*EventMessage_Block); ok {
		return x.Block
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*EventMessage) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*EventMessage_Tx)(nil),
		(*EventMessage_Block)(nil),
	}
}

/////// 事件订阅请求数据结构
// BlockEventRequest 订阅区块请求
type BlockEventRequest struct {
	BcName               string   `protobuf:"bytes,1,opt,name=bc_name,json=bcName,proto3" json:"bc_name,omitempty"`
	Proposer             string   `protobuf:"bytes,2,opt,name=proposer,proto3" json:"proposer,omitempty"`
	StartHeight          int64    `protobuf:"varint,3,opt,name=start_height,json=startHeight,proto3" json:"start_height,omitempty"`
	EndHeight            int64    `protobuf:"varint,4,opt,name=end_height,json=endHeight,proto3" json:"end_height,omitempty"`
	NeedContent          bool     `protobuf:"varint,5,opt,name=need_content,json=needContent,proto3" json:"need_content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockEventRequest) Reset()         { *m = BlockEventRequest{} }
func (m *BlockEventRequest) String() string { return proto.CompactTextString(m) }
func (*BlockEventRequest) ProtoMessage()    {}
func (*BlockEventRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{1}
}

func (m *BlockEventRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockEventRequest.Unmarshal(m, b)
}
func (m *BlockEventRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockEventRequest.Marshal(b, m, deterministic)
}
func (m *BlockEventRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockEventRequest.Merge(m, src)
}
func (m *BlockEventRequest) XXX_Size() int {
	return xxx_messageInfo_BlockEventRequest.Size(m)
}
func (m *BlockEventRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockEventRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BlockEventRequest proto.InternalMessageInfo

func (m *BlockEventRequest) GetBcName() string {
	if m != nil {
		return m.BcName
	}
	return ""
}

func (m *BlockEventRequest) GetProposer() string {
	if m != nil {
		return m.Proposer
	}
	return ""
}

func (m *BlockEventRequest) GetStartHeight() int64 {
	if m != nil {
		return m.StartHeight
	}
	return 0
}

func (m *BlockEventRequest) GetEndHeight() int64 {
	if m != nil {
		return m.EndHeight
	}
	return 0
}

func (m *BlockEventRequest) GetNeedContent() bool {
	if m != nil {
		return m.NeedContent
	}
	return false
}

// TransactionEventRequest 订阅交易请求
type TransactionEventRequest struct {
	BcName               string   `protobuf:"bytes,1,opt,name=bc_name,json=bcName,proto3" json:"bc_name,omitempty"`
	Initiator            string   `protobuf:"bytes,2,opt,name=initiator,proto3" json:"initiator,omitempty"`
	AuthRequire          []string `protobuf:"bytes,3,rep,name=auth_require,json=authRequire,proto3" json:"auth_require,omitempty"`
	NeedContent          bool     `protobuf:"varint,4,opt,name=need_content,json=needContent,proto3" json:"need_content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransactionEventRequest) Reset()         { *m = TransactionEventRequest{} }
func (m *TransactionEventRequest) String() string { return proto.CompactTextString(m) }
func (*TransactionEventRequest) ProtoMessage()    {}
func (*TransactionEventRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{2}
}

func (m *TransactionEventRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionEventRequest.Unmarshal(m, b)
}
func (m *TransactionEventRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionEventRequest.Marshal(b, m, deterministic)
}
func (m *TransactionEventRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionEventRequest.Merge(m, src)
}
func (m *TransactionEventRequest) XXX_Size() int {
	return xxx_messageInfo_TransactionEventRequest.Size(m)
}
func (m *TransactionEventRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionEventRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionEventRequest proto.InternalMessageInfo

func (m *TransactionEventRequest) GetBcName() string {
	if m != nil {
		return m.BcName
	}
	return ""
}

func (m *TransactionEventRequest) GetInitiator() string {
	if m != nil {
		return m.Initiator
	}
	return ""
}

func (m *TransactionEventRequest) GetAuthRequire() []string {
	if m != nil {
		return m.AuthRequire
	}
	return nil
}

func (m *TransactionEventRequest) GetNeedContent() bool {
	if m != nil {
		return m.NeedContent
	}
	return false
}

// AccountEventRequest 订阅账户请求
type AccountEventRequest struct {
	FromAddr             string   `protobuf:"bytes,1,opt,name=from_addr,json=fromAddr,proto3" json:"from_addr,omitempty"`
	ToAddr               string   `protobuf:"bytes,2,opt,name=to_addr,json=toAddr,proto3" json:"to_addr,omitempty"`
	NeedContent          bool     `protobuf:"varint,3,opt,name=need_content,json=needContent,proto3" json:"need_content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AccountEventRequest) Reset()         { *m = AccountEventRequest{} }
func (m *AccountEventRequest) String() string { return proto.CompactTextString(m) }
func (*AccountEventRequest) ProtoMessage()    {}
func (*AccountEventRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{3}
}

func (m *AccountEventRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccountEventRequest.Unmarshal(m, b)
}
func (m *AccountEventRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccountEventRequest.Marshal(b, m, deterministic)
}
func (m *AccountEventRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountEventRequest.Merge(m, src)
}
func (m *AccountEventRequest) XXX_Size() int {
	return xxx_messageInfo_AccountEventRequest.Size(m)
}
func (m *AccountEventRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountEventRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AccountEventRequest proto.InternalMessageInfo

func (m *AccountEventRequest) GetFromAddr() string {
	if m != nil {
		return m.FromAddr
	}
	return ""
}

func (m *AccountEventRequest) GetToAddr() string {
	if m != nil {
		return m.ToAddr
	}
	return ""
}

func (m *AccountEventRequest) GetNeedContent() bool {
	if m != nil {
		return m.NeedContent
	}
	return false
}

// CancelEventRequest 取消事件订阅请求
type CancelEventRequest struct {
	EventId              string   `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CancelEventRequest) Reset()         { *m = CancelEventRequest{} }
func (m *CancelEventRequest) String() string { return proto.CompactTextString(m) }
func (*CancelEventRequest) ProtoMessage()    {}
func (*CancelEventRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{4}
}

func (m *CancelEventRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CancelEventRequest.Unmarshal(m, b)
}
func (m *CancelEventRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CancelEventRequest.Marshal(b, m, deterministic)
}
func (m *CancelEventRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelEventRequest.Merge(m, src)
}
func (m *CancelEventRequest) XXX_Size() int {
	return xxx_messageInfo_CancelEventRequest.Size(m)
}
func (m *CancelEventRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelEventRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CancelEventRequest proto.InternalMessageInfo

func (m *CancelEventRequest) GetEventId() string {
	if m != nil {
		return m.EventId
	}
	return ""
}

// EventRequest 将上述几种事件订阅统一归为EventRequest
type EventRequest struct {
	// Types that are valid to be assigned to Type:
	//	*EventRequest_BlockEvent
	//	*EventRequest_TransactionEvent
	//	*EventRequest_AccountEvent
	//	*EventRequest_CancelEvent
	Type                 isEventRequest_Type `protobuf_oneof:"Type"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *EventRequest) Reset()         { *m = EventRequest{} }
func (m *EventRequest) String() string { return proto.CompactTextString(m) }
func (*EventRequest) ProtoMessage()    {}
func (*EventRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{5}
}

func (m *EventRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventRequest.Unmarshal(m, b)
}
func (m *EventRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventRequest.Marshal(b, m, deterministic)
}
func (m *EventRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventRequest.Merge(m, src)
}
func (m *EventRequest) XXX_Size() int {
	return xxx_messageInfo_EventRequest.Size(m)
}
func (m *EventRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EventRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EventRequest proto.InternalMessageInfo

type isEventRequest_Type interface {
	isEventRequest_Type()
}

type EventRequest_BlockEvent struct {
	BlockEvent *BlockEventRequest `protobuf:"bytes,1,opt,name=block_event,json=blockEvent,proto3,oneof"`
}

type EventRequest_TransactionEvent struct {
	TransactionEvent *TransactionEventRequest `protobuf:"bytes,2,opt,name=transaction_event,json=transactionEvent,proto3,oneof"`
}

type EventRequest_AccountEvent struct {
	AccountEvent *AccountEventRequest `protobuf:"bytes,3,opt,name=account_event,json=accountEvent,proto3,oneof"`
}

type EventRequest_CancelEvent struct {
	CancelEvent *CancelEventRequest `protobuf:"bytes,4,opt,name=cancel_event,json=cancelEvent,proto3,oneof"`
}

func (*EventRequest_BlockEvent) isEventRequest_Type() {}

func (*EventRequest_TransactionEvent) isEventRequest_Type() {}

func (*EventRequest_AccountEvent) isEventRequest_Type() {}

func (*EventRequest_CancelEvent) isEventRequest_Type() {}

func (m *EventRequest) GetType() isEventRequest_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *EventRequest) GetBlockEvent() *BlockEventRequest {
	if x, ok := m.GetType().(*EventRequest_BlockEvent); ok {
		return x.BlockEvent
	}
	return nil
}

func (m *EventRequest) GetTransactionEvent() *TransactionEventRequest {
	if x, ok := m.GetType().(*EventRequest_TransactionEvent); ok {
		return x.TransactionEvent
	}
	return nil
}

func (m *EventRequest) GetAccountEvent() *AccountEventRequest {
	if x, ok := m.GetType().(*EventRequest_AccountEvent); ok {
		return x.AccountEvent
	}
	return nil
}

func (m *EventRequest) GetCancelEvent() *CancelEventRequest {
	if x, ok := m.GetType().(*EventRequest_CancelEvent); ok {
		return x.CancelEvent
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*EventRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*EventRequest_BlockEvent)(nil),
		(*EventRequest_TransactionEvent)(nil),
		(*EventRequest_AccountEvent)(nil),
		(*EventRequest_CancelEvent)(nil),
	}
}

//////// 事件订阅返回数据结构
// SubscribeResponse 订阅产生的event_id
type SubscribeResponse struct {
	EventId              string        `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	EventRequest         *EventRequest `protobuf:"bytes,2,opt,name=event_request,json=eventRequest,proto3" json:"event_request,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *SubscribeResponse) Reset()         { *m = SubscribeResponse{} }
func (m *SubscribeResponse) String() string { return proto.CompactTextString(m) }
func (*SubscribeResponse) ProtoMessage()    {}
func (*SubscribeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{6}
}

func (m *SubscribeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeResponse.Unmarshal(m, b)
}
func (m *SubscribeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeResponse.Marshal(b, m, deterministic)
}
func (m *SubscribeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeResponse.Merge(m, src)
}
func (m *SubscribeResponse) XXX_Size() int {
	return xxx_messageInfo_SubscribeResponse.Size(m)
}
func (m *SubscribeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeResponse proto.InternalMessageInfo

func (m *SubscribeResponse) GetEventId() string {
	if m != nil {
		return m.EventId
	}
	return ""
}

func (m *SubscribeResponse) GetEventRequest() *EventRequest {
	if m != nil {
		return m.EventRequest
	}
	return nil
}

// BlockEventResponse 订阅区块返回
type BlockEventResponse struct {
	EventId              string           `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	Type                 EventType        `protobuf:"varint,2,opt,name=type,proto3,enum=pb.EventType" json:"type,omitempty"`
	Status               *BlockStatusInfo `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Block                *InternalBlock   `protobuf:"bytes,4,opt,name=block,proto3" json:"block,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *BlockEventResponse) Reset()         { *m = BlockEventResponse{} }
func (m *BlockEventResponse) String() string { return proto.CompactTextString(m) }
func (*BlockEventResponse) ProtoMessage()    {}
func (*BlockEventResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{7}
}

func (m *BlockEventResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockEventResponse.Unmarshal(m, b)
}
func (m *BlockEventResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockEventResponse.Marshal(b, m, deterministic)
}
func (m *BlockEventResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockEventResponse.Merge(m, src)
}
func (m *BlockEventResponse) XXX_Size() int {
	return xxx_messageInfo_BlockEventResponse.Size(m)
}
func (m *BlockEventResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockEventResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BlockEventResponse proto.InternalMessageInfo

func (m *BlockEventResponse) GetEventId() string {
	if m != nil {
		return m.EventId
	}
	return ""
}

func (m *BlockEventResponse) GetType() EventType {
	if m != nil {
		return m.Type
	}
	return EventType_DEFAULT_EVENT
}

func (m *BlockEventResponse) GetStatus() *BlockStatusInfo {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *BlockEventResponse) GetBlock() *InternalBlock {
	if m != nil {
		return m.Block
	}
	return nil
}

// TransactionEventResponse 订阅交易返回
type TransactionEventResponse struct {
	EventId              string                 `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	Type                 EventType              `protobuf:"varint,2,opt,name=type,proto3,enum=pb.EventType" json:"type,omitempty"`
	Status               *TransactionStatusInfo `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Tx                   *Transaction           `protobuf:"bytes,4,opt,name=tx,proto3" json:"tx,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *TransactionEventResponse) Reset()         { *m = TransactionEventResponse{} }
func (m *TransactionEventResponse) String() string { return proto.CompactTextString(m) }
func (*TransactionEventResponse) ProtoMessage()    {}
func (*TransactionEventResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{8}
}

func (m *TransactionEventResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionEventResponse.Unmarshal(m, b)
}
func (m *TransactionEventResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionEventResponse.Marshal(b, m, deterministic)
}
func (m *TransactionEventResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionEventResponse.Merge(m, src)
}
func (m *TransactionEventResponse) XXX_Size() int {
	return xxx_messageInfo_TransactionEventResponse.Size(m)
}
func (m *TransactionEventResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionEventResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionEventResponse proto.InternalMessageInfo

func (m *TransactionEventResponse) GetEventId() string {
	if m != nil {
		return m.EventId
	}
	return ""
}

func (m *TransactionEventResponse) GetType() EventType {
	if m != nil {
		return m.Type
	}
	return EventType_DEFAULT_EVENT
}

func (m *TransactionEventResponse) GetStatus() *TransactionStatusInfo {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *TransactionEventResponse) GetTx() *Transaction {
	if m != nil {
		return m.Tx
	}
	return nil
}

// AccountEventResponse 订阅账户返回
type AccountEventResponse struct {
	EventId              string             `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	Type                 EventType          `protobuf:"varint,2,opt,name=type,proto3,enum=pb.EventType" json:"type,omitempty"`
	Status               *AccountStatusInfo `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Tx                   *Transaction       `protobuf:"bytes,4,opt,name=tx,proto3" json:"tx,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *AccountEventResponse) Reset()         { *m = AccountEventResponse{} }
func (m *AccountEventResponse) String() string { return proto.CompactTextString(m) }
func (*AccountEventResponse) ProtoMessage()    {}
func (*AccountEventResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{9}
}

func (m *AccountEventResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccountEventResponse.Unmarshal(m, b)
}
func (m *AccountEventResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccountEventResponse.Marshal(b, m, deterministic)
}
func (m *AccountEventResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountEventResponse.Merge(m, src)
}
func (m *AccountEventResponse) XXX_Size() int {
	return xxx_messageInfo_AccountEventResponse.Size(m)
}
func (m *AccountEventResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountEventResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AccountEventResponse proto.InternalMessageInfo

func (m *AccountEventResponse) GetEventId() string {
	if m != nil {
		return m.EventId
	}
	return ""
}

func (m *AccountEventResponse) GetType() EventType {
	if m != nil {
		return m.Type
	}
	return EventType_DEFAULT_EVENT
}

func (m *AccountEventResponse) GetStatus() *AccountStatusInfo {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *AccountEventResponse) GetTx() *Transaction {
	if m != nil {
		return m.Tx
	}
	return nil
}

////// EventResponse 将上述几类统一归为EventResponse
type EventResponse struct {
	// Types that are valid to be assigned to Type:
	//	*EventResponse_BlockEventResponse
	//	*EventResponse_TransactionEventResponse
	//	*EventResponse_AccountEventResponse
	//	*EventResponse_SubscribeResponse
	Type                 isEventResponse_Type `protobuf_oneof:"Type"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *EventResponse) Reset()         { *m = EventResponse{} }
func (m *EventResponse) String() string { return proto.CompactTextString(m) }
func (*EventResponse) ProtoMessage()    {}
func (*EventResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{10}
}

func (m *EventResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventResponse.Unmarshal(m, b)
}
func (m *EventResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventResponse.Marshal(b, m, deterministic)
}
func (m *EventResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventResponse.Merge(m, src)
}
func (m *EventResponse) XXX_Size() int {
	return xxx_messageInfo_EventResponse.Size(m)
}
func (m *EventResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EventResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EventResponse proto.InternalMessageInfo

type isEventResponse_Type interface {
	isEventResponse_Type()
}

type EventResponse_BlockEventResponse struct {
	BlockEventResponse *BlockEventResponse `protobuf:"bytes,1,opt,name=block_event_response,json=blockEventResponse,proto3,oneof"`
}

type EventResponse_TransactionEventResponse struct {
	TransactionEventResponse *TransactionEventResponse `protobuf:"bytes,2,opt,name=transaction_event_response,json=transactionEventResponse,proto3,oneof"`
}

type EventResponse_AccountEventResponse struct {
	AccountEventResponse *AccountEventRequest `protobuf:"bytes,3,opt,name=account_event_response,json=accountEventResponse,proto3,oneof"`
}

type EventResponse_SubscribeResponse struct {
	SubscribeResponse *SubscribeResponse `protobuf:"bytes,4,opt,name=subscribe_response,json=subscribeResponse,proto3,oneof"`
}

func (*EventResponse_BlockEventResponse) isEventResponse_Type() {}

func (*EventResponse_TransactionEventResponse) isEventResponse_Type() {}

func (*EventResponse_AccountEventResponse) isEventResponse_Type() {}

func (*EventResponse_SubscribeResponse) isEventResponse_Type() {}

func (m *EventResponse) GetType() isEventResponse_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *EventResponse) GetBlockEventResponse() *BlockEventResponse {
	if x, ok := m.GetType().(*EventResponse_BlockEventResponse); ok {
		return x.BlockEventResponse
	}
	return nil
}

func (m *EventResponse) GetTransactionEventResponse() *TransactionEventResponse {
	if x, ok := m.GetType().(*EventResponse_TransactionEventResponse); ok {
		return x.TransactionEventResponse
	}
	return nil
}

func (m *EventResponse) GetAccountEventResponse() *AccountEventRequest {
	if x, ok := m.GetType().(*EventResponse_AccountEventResponse); ok {
		return x.AccountEventResponse
	}
	return nil
}

func (m *EventResponse) GetSubscribeResponse() *SubscribeResponse {
	if x, ok := m.GetType().(*EventResponse_SubscribeResponse); ok {
		return x.SubscribeResponse
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*EventResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*EventResponse_BlockEventResponse)(nil),
		(*EventResponse_TransactionEventResponse)(nil),
		(*EventResponse_AccountEventResponse)(nil),
		(*EventResponse_SubscribeResponse)(nil),
	}
}

// BlockStatusInfo 区块元数据
type BlockStatusInfo struct {
	BcName               string                       `protobuf:"bytes,1,opt,name=bc_name,json=bcName,proto3" json:"bc_name,omitempty"`
	Status               BlockStatusInfo_EBlockStatus `protobuf:"varint,2,opt,name=status,proto3,enum=pb.BlockStatusInfo_EBlockStatus" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *BlockStatusInfo) Reset()         { *m = BlockStatusInfo{} }
func (m *BlockStatusInfo) String() string { return proto.CompactTextString(m) }
func (*BlockStatusInfo) ProtoMessage()    {}
func (*BlockStatusInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{11}
}

func (m *BlockStatusInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockStatusInfo.Unmarshal(m, b)
}
func (m *BlockStatusInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockStatusInfo.Marshal(b, m, deterministic)
}
func (m *BlockStatusInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockStatusInfo.Merge(m, src)
}
func (m *BlockStatusInfo) XXX_Size() int {
	return xxx_messageInfo_BlockStatusInfo.Size(m)
}
func (m *BlockStatusInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockStatusInfo.DiscardUnknown(m)
}

var xxx_messageInfo_BlockStatusInfo proto.InternalMessageInfo

func (m *BlockStatusInfo) GetBcName() string {
	if m != nil {
		return m.BcName
	}
	return ""
}

func (m *BlockStatusInfo) GetStatus() BlockStatusInfo_EBlockStatus {
	if m != nil {
		return m.Status
	}
	return BlockStatusInfo_ERROR
}

type TransactionStatusInfo struct {
	BcName               string                                   `protobuf:"bytes,1,opt,name=bc_name,json=bcName,proto3" json:"bc_name,omitempty"`
	Initiator            string                                   `protobuf:"bytes,2,opt,name=initiator,proto3" json:"initiator,omitempty"`
	Status               TransactionStatusInfo_ETransactionStatus `protobuf:"varint,3,opt,name=status,proto3,enum=pb.TransactionStatusInfo_ETransactionStatus" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                 `json:"-"`
	XXX_unrecognized     []byte                                   `json:"-"`
	XXX_sizecache        int32                                    `json:"-"`
}

func (m *TransactionStatusInfo) Reset()         { *m = TransactionStatusInfo{} }
func (m *TransactionStatusInfo) String() string { return proto.CompactTextString(m) }
func (*TransactionStatusInfo) ProtoMessage()    {}
func (*TransactionStatusInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{12}
}

func (m *TransactionStatusInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionStatusInfo.Unmarshal(m, b)
}
func (m *TransactionStatusInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionStatusInfo.Marshal(b, m, deterministic)
}
func (m *TransactionStatusInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionStatusInfo.Merge(m, src)
}
func (m *TransactionStatusInfo) XXX_Size() int {
	return xxx_messageInfo_TransactionStatusInfo.Size(m)
}
func (m *TransactionStatusInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionStatusInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionStatusInfo proto.InternalMessageInfo

func (m *TransactionStatusInfo) GetBcName() string {
	if m != nil {
		return m.BcName
	}
	return ""
}

func (m *TransactionStatusInfo) GetInitiator() string {
	if m != nil {
		return m.Initiator
	}
	return ""
}

func (m *TransactionStatusInfo) GetStatus() TransactionStatusInfo_ETransactionStatus {
	if m != nil {
		return m.Status
	}
	return TransactionStatusInfo_UNDEFINE
}

type AccountStatusInfo struct {
	BcName               string   `protobuf:"bytes,1,opt,name=bc_name,json=bcName,proto3" json:"bc_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AccountStatusInfo) Reset()         { *m = AccountStatusInfo{} }
func (m *AccountStatusInfo) String() string { return proto.CompactTextString(m) }
func (*AccountStatusInfo) ProtoMessage()    {}
func (*AccountStatusInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{13}
}

func (m *AccountStatusInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccountStatusInfo.Unmarshal(m, b)
}
func (m *AccountStatusInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccountStatusInfo.Marshal(b, m, deterministic)
}
func (m *AccountStatusInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountStatusInfo.Merge(m, src)
}
func (m *AccountStatusInfo) XXX_Size() int {
	return xxx_messageInfo_AccountStatusInfo.Size(m)
}
func (m *AccountStatusInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountStatusInfo.DiscardUnknown(m)
}

var xxx_messageInfo_AccountStatusInfo proto.InternalMessageInfo

func (m *AccountStatusInfo) GetBcName() string {
	if m != nil {
		return m.BcName
	}
	return ""
}

func init() {
	proto.RegisterEnum("pb.EventType", EventType_name, EventType_value)
	proto.RegisterEnum("pb.BlockStatusInfo_EBlockStatus", BlockStatusInfo_EBlockStatus_name, BlockStatusInfo_EBlockStatus_value)
	proto.RegisterEnum("pb.TransactionStatusInfo_ETransactionStatus", TransactionStatusInfo_ETransactionStatus_name, TransactionStatusInfo_ETransactionStatus_value)
	proto.RegisterEnum("pb.AccountStatusInfo_ETransactionStatus", AccountStatusInfo_ETransactionStatus_name, AccountStatusInfo_ETransactionStatus_value)
	proto.RegisterType((*EventMessage)(nil), "pb.EventMessage")
	proto.RegisterType((*BlockEventRequest)(nil), "pb.BlockEventRequest")
	proto.RegisterType((*TransactionEventRequest)(nil), "pb.TransactionEventRequest")
	proto.RegisterType((*AccountEventRequest)(nil), "pb.AccountEventRequest")
	proto.RegisterType((*CancelEventRequest)(nil), "pb.CancelEventRequest")
	proto.RegisterType((*EventRequest)(nil), "pb.EventRequest")
	proto.RegisterType((*SubscribeResponse)(nil), "pb.SubscribeResponse")
	proto.RegisterType((*BlockEventResponse)(nil), "pb.BlockEventResponse")
	proto.RegisterType((*TransactionEventResponse)(nil), "pb.TransactionEventResponse")
	proto.RegisterType((*AccountEventResponse)(nil), "pb.AccountEventResponse")
	proto.RegisterType((*EventResponse)(nil), "pb.EventResponse")
	proto.RegisterType((*BlockStatusInfo)(nil), "pb.BlockStatusInfo")
	proto.RegisterType((*TransactionStatusInfo)(nil), "pb.TransactionStatusInfo")
	proto.RegisterType((*AccountStatusInfo)(nil), "pb.AccountStatusInfo")
}

func init() { proto.RegisterFile("event.proto", fileDescriptor_2d17a9d3f0ddf27e) }

var fileDescriptor_2d17a9d3f0ddf27e = []byte{
	// 1027 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x56, 0xdb, 0x6e, 0xdb, 0x46,
	0x10, 0x15, 0x25, 0x5a, 0x36, 0x87, 0x52, 0x4c, 0xad, 0x6f, 0x8a, 0xe2, 0xa2, 0x36, 0x5f, 0xea,
	0xde, 0xec, 0xd6, 0x6d, 0x81, 0x00, 0x05, 0x02, 0x48, 0x34, 0x05, 0x29, 0x71, 0xa8, 0x60, 0x25,
	0x15, 0x2d, 0x50, 0x40, 0xe0, 0x65, 0x63, 0x13, 0xb5, 0x97, 0x0a, 0xb9, 0x0a, 0x9c, 0x0f, 0x28,
	0xfa, 0x07, 0x05, 0xfa, 0x9e, 0x87, 0x3c, 0xb4, 0x3f, 0xd4, 0x9f, 0xe8, 0x2f, 0x14, 0xbb, 0xa4,
	0x28, 0x8a, 0x94, 0x9a, 0x36, 0x48, 0xdf, 0xc4, 0x33, 0xb3, 0x33, 0x67, 0x77, 0xce, 0xd9, 0x15,
	0xa8, 0xe4, 0x25, 0xa1, 0xec, 0x74, 0x1a, 0x06, 0x2c, 0x40, 0xe5, 0xa9, 0xd3, 0x3a, 0xbc, 0x0a,
	0x82, 0xab, 0x1b, 0x72, 0x66, 0x4f, 0xfd, 0x33, 0x9b, 0xd2, 0x80, 0xd9, 0xcc, 0x0f, 0x68, 0x14,
	0x67, 0xb4, 0x6a, 0x77, 0xee, 0xb5, 0xed, 0xd3, 0xf8, 0x4b, 0xf7, 0xa0, 0x66, 0xf2, 0xe5, 0x4f,
	0x49, 0x14, 0xd9, 0x57, 0x04, 0x1d, 0x43, 0x99, 0xdd, 0x35, 0xa5, 0x23, 0xe9, 0x44, 0x3d, 0xdf,
	0x3e, 0x9d, 0x3a, 0xa7, 0xa3, 0xd0, 0xa6, 0x91, 0xed, 0xf2, 0x0a, 0xbd, 0x12, 0x2e, 0xb3, 0x3b,
	0xf4, 0x31, 0x6c, 0x38, 0x37, 0x81, 0xfb, 0x53, 0xb3, 0x2c, 0xb2, 0x1a, 0x3c, 0xab, 0x4f, 0x19,
	0x09, 0xa9, 0x7d, 0xd3, 0xe1, 0x81, 0x5e, 0x09, 0xc7, 0x19, 0x9d, 0x2a, 0xc8, 0xa3, 0x57, 0x53,
	0xa2, 0xff, 0x21, 0x41, 0x43, 0x84, 0x44, 0x2f, 0x4c, 0x5e, 0xcc, 0x48, 0xc4, 0xd0, 0x01, 0x6c,
	0x3a, 0xee, 0x84, 0xda, 0xb7, 0x44, 0x34, 0x54, 0x70, 0xd5, 0x71, 0x2d, 0xfb, 0x96, 0xa0, 0x16,
	0x6c, 0x4d, 0xc3, 0x60, 0x1a, 0x44, 0x24, 0x14, 0x4d, 0x14, 0x9c, 0x7e, 0xa3, 0x63, 0xa8, 0x45,
	0xcc, 0x0e, 0xd9, 0xe4, 0x9a, 0xf8, 0x57, 0xd7, 0xac, 0x59, 0x39, 0x92, 0x4e, 0x2a, 0x58, 0x15,
	0x58, 0x4f, 0x40, 0xe8, 0x03, 0x00, 0x42, 0xbd, 0x79, 0x82, 0x2c, 0x12, 0x14, 0x42, 0xbd, 0x24,
	0x7c, 0x0c, 0x35, 0x4a, 0x88, 0x37, 0x71, 0x03, 0xca, 0x08, 0x65, 0xcd, 0x8d, 0x23, 0xe9, 0x64,
	0x0b, 0xab, 0x1c, 0x33, 0x62, 0x48, 0xff, 0x55, 0x82, 0x83, 0xcc, 0xc6, 0xff, 0x1d, 0xeb, 0x43,
	0x50, 0x7c, 0xea, 0x33, 0xdf, 0x66, 0xc1, 0x9c, 0xf6, 0x02, 0xe0, 0x5d, 0xed, 0x19, 0xbb, 0x9e,
	0x84, 0xe4, 0xc5, 0xcc, 0x0f, 0x49, 0xb3, 0x72, 0x54, 0x39, 0x51, 0xb0, 0xca, 0x31, 0x1c, 0x43,
	0x05, 0x62, 0x72, 0x91, 0x18, 0x85, 0x9d, 0xb6, 0xeb, 0x06, 0x33, 0xca, 0x96, 0x38, 0x3d, 0x00,
	0xe5, 0x79, 0x18, 0xdc, 0x4e, 0x6c, 0xcf, 0x0b, 0x13, 0x56, 0x5b, 0x1c, 0x68, 0x7b, 0x5e, 0xc8,
	0x09, 0xb3, 0x20, 0x0e, 0xc5, 0xac, 0xaa, 0x2c, 0x10, 0x81, 0x7c, 0xbf, 0x4a, 0xb1, 0xdf, 0x19,
	0x20, 0xc3, 0xa6, 0x2e, 0xb9, 0x59, 0x6a, 0x77, 0x1f, 0xb6, 0x84, 0xe6, 0x26, 0xbe, 0x97, 0x74,
	0xdb, 0x14, 0xdf, 0x7d, 0x4f, 0xff, 0xad, 0x9c, 0x08, 0x6a, 0x9e, 0xfb, 0x10, 0x54, 0xa1, 0x85,
	0x89, 0xc8, 0x48, 0x94, 0xb5, 0xc7, 0x35, 0x53, 0x10, 0x44, 0xaf, 0x84, 0xc1, 0x49, 0x41, 0xf4,
	0x18, 0x1a, 0x6c, 0x31, 0x83, 0x64, 0x7d, 0xac, 0xb9, 0x07, 0x39, 0x65, 0xe6, 0xaa, 0x68, 0x2c,
	0x17, 0x42, 0x8f, 0xa0, 0x6e, 0xc7, 0xe7, 0x96, 0xd4, 0xa9, 0x88, 0x3a, 0x07, 0xbc, 0xce, 0x8a,
	0x03, 0xed, 0x95, 0x70, 0xcd, 0xce, 0xc0, 0xe8, 0x5b, 0xa8, 0xb9, 0xe2, 0x1c, 0x92, 0xe5, 0xb2,
	0x58, 0xbe, 0xcf, 0x97, 0x17, 0xcf, 0xa7, 0x57, 0xc2, 0xaa, 0xbb, 0x40, 0x53, 0x17, 0x10, 0x68,
	0x0c, 0x67, 0x4e, 0xe4, 0x86, 0xbe, 0x43, 0x30, 0x89, 0xa6, 0x01, 0x8d, 0xc8, 0x3f, 0x9c, 0x25,
	0xfa, 0x06, 0xea, 0x71, 0x28, 0x8c, 0xeb, 0x26, 0x9b, 0xd7, 0x78, 0xd7, 0x6c, 0x3f, 0x5c, 0x23,
	0x99, 0x2f, 0xfd, 0x8d, 0x04, 0x28, 0x7b, 0xb6, 0x6f, 0x6f, 0x74, 0x0c, 0x32, 0x7b, 0x35, 0x25,
	0xa2, 0xfe, 0xbd, 0xf3, 0x7a, 0x5a, 0x9f, 0xb3, 0xc6, 0x22, 0x84, 0x3e, 0x85, 0x6a, 0xc4, 0x6c,
	0x36, 0x8b, 0x92, 0x93, 0xdb, 0x49, 0x27, 0x38, 0x14, 0x70, 0x9f, 0x3e, 0x0f, 0x70, 0x92, 0x82,
	0x3e, 0x9a, 0xdf, 0x10, 0xf2, 0x9a, 0x1b, 0x22, 0xb9, 0x1f, 0xf4, 0xdf, 0x25, 0x68, 0x16, 0xc7,
	0xf8, 0x5e, 0x08, 0x7f, 0x99, 0x23, 0x7c, 0x3f, 0x27, 0x99, 0x15, 0xb4, 0x3f, 0x14, 0x77, 0x9f,
	0xbc, 0xf2, 0xee, 0xe3, 0x37, 0x9f, 0xfe, 0x5a, 0x82, 0xdd, 0x65, 0xb5, 0xbc, 0x17, 0xaa, 0x9f,
	0xe7, 0xa8, 0xee, 0x65, 0x54, 0xf9, 0x2e, 0x34, 0xff, 0x2c, 0x43, 0x7d, 0x99, 0xdf, 0x63, 0xd8,
	0xcd, 0x98, 0x70, 0x12, 0x26, 0x78, 0xe2, 0xc6, 0xfd, 0xbc, 0x1b, 0xe3, 0x68, 0xaf, 0x84, 0x91,
	0x53, 0xd4, 0xd1, 0x8f, 0xd0, 0x2a, 0xd8, 0x72, 0x51, 0x31, 0x96, 0xe8, 0xe1, 0x6a, 0x7f, 0xa6,
	0x75, 0x9b, 0x6c, 0xdd, 0xd0, 0x07, 0xb0, 0xbf, 0x64, 0xd4, 0x45, 0xe5, 0xb7, 0x3a, 0x76, 0xd7,
	0x5e, 0x35, 0x9a, 0x2e, 0xa0, 0x68, 0x6e, 0xba, 0x45, 0x31, 0x79, 0x71, 0xd0, 0x05, 0x4b, 0xf6,
	0x4a, 0xb8, 0x11, 0xe5, 0xc1, 0xd4, 0xc4, 0xaf, 0x25, 0xd8, 0xce, 0xe9, 0x7e, 0xfd, 0x93, 0xf0,
	0x30, 0x9d, 0x6c, 0x3c, 0xfe, 0xa3, 0x15, 0xae, 0x39, 0x35, 0x33, 0xc0, 0x7c, 0xc8, 0xfa, 0x23,
	0xa8, 0x65, 0x71, 0xa4, 0xc0, 0x86, 0x89, 0xf1, 0x00, 0x6b, 0x25, 0xfe, 0x73, 0x84, 0xc7, 0xd6,
	0x13, 0x4d, 0x42, 0x00, 0xd5, 0x0e, 0x6e, 0x5b, 0x46, 0x4f, 0x2b, 0xa3, 0x1a, 0x6c, 0x59, 0x03,
	0xcb, 0xfc, 0xbe, 0x3f, 0x1c, 0x69, 0x15, 0xfd, 0x2f, 0x09, 0xf6, 0x56, 0xaa, 0xfd, 0x5d, 0xdf,
	0xaf, 0x8b, 0x25, 0x91, 0xde, 0x3b, 0xff, 0x6c, 0xad, 0x9f, 0x4e, 0xcd, 0x02, 0x9c, 0x6e, 0xeb,
	0x07, 0x40, 0xc5, 0x28, 0xa7, 0x3e, 0xb6, 0x2e, 0xcc, 0x6e, 0xdf, 0x32, 0xb5, 0x12, 0x52, 0x61,
	0xd3, 0x18, 0x58, 0xdd, 0x3e, 0x7e, 0xaa, 0x49, 0xa8, 0x0e, 0x4a, 0x77, 0x8c, 0x8d, 0xf6, 0xa8,
	0x3f, 0xb0, 0xb4, 0x32, 0xdf, 0x70, 0xb7, 0xdd, 0xbf, 0x34, 0x2f, 0xb4, 0x0a, 0x0f, 0x8d, 0xad,
	0x79, 0xa6, 0xac, 0xff, 0x22, 0x41, 0xa3, 0x60, 0x9a, 0xb5, 0xbb, 0xfd, 0x1f, 0x99, 0x7c, 0xf2,
	0xb3, 0x04, 0x4a, 0xea, 0x71, 0xd4, 0x80, 0xfa, 0x85, 0xd9, 0x6d, 0x8f, 0x2f, 0x47, 0x13, 0xf3,
	0x3b, 0xd3, 0x1a, 0x69, 0x25, 0xb4, 0x03, 0xdb, 0xc3, 0x71, 0x67, 0x68, 0xe0, 0x7e, 0xc7, 0x4c,
	0x40, 0x09, 0xed, 0x41, 0x63, 0x6c, 0xe5, 0xe1, 0x32, 0xda, 0x06, 0xb5, 0x73, 0x39, 0x30, 0x9e,
	0x24, 0x40, 0x85, 0xe7, 0x8d, 0x70, 0xdb, 0x1a, 0xb6, 0x0d, 0xce, 0x24, 0x81, 0x65, 0xde, 0xa6,
	0x6d, 0x18, 0x83, 0xb1, 0x35, 0x6f, 0xb3, 0x71, 0xfe, 0x46, 0x82, 0xfa, 0xb3, 0x99, 0x13, 0xcd,
	0x9c, 0x21, 0x09, 0x5f, 0xfa, 0x2e, 0xbf, 0x69, 0x36, 0x9f, 0xcd, 0x9c, 0x1b, 0x3f, 0xba, 0x46,
	0x8b, 0x57, 0x24, 0xf9, 0xeb, 0xd7, 0x2a, 0x20, 0xe8, 0x1c, 0x94, 0xd4, 0x1d, 0xa8, 0xf0, 0xec,
	0xb4, 0x1a, 0x19, 0x24, 0x76, 0xc9, 0x17, 0x12, 0xfa, 0x1a, 0xd4, 0x31, 0xfd, 0xaf, 0xab, 0x9c,
	0xaa, 0xf8, 0x37, 0xfa, 0xd5, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x92, 0xd8, 0x94, 0x73, 0xcc,
	0x0a, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PubsubServiceClient is the client API for PubsubService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PubsubServiceClient interface {
	Publish(ctx context.Context, in *EventMessage, opts ...grpc.CallOption) (*EventMessage, error)
	Subscribe(ctx context.Context, in *EventRequest, opts ...grpc.CallOption) (PubsubService_SubscribeClient, error)
	UnSubscribe(ctx context.Context, in *EventRequest, opts ...grpc.CallOption) (PubsubService_UnSubscribeClient, error)
}

type pubsubServiceClient struct {
	cc *grpc.ClientConn
}

func NewPubsubServiceClient(cc *grpc.ClientConn) PubsubServiceClient {
	return &pubsubServiceClient{cc}
}

func (c *pubsubServiceClient) Publish(ctx context.Context, in *EventMessage, opts ...grpc.CallOption) (*EventMessage, error) {
	out := new(EventMessage)
	err := c.cc.Invoke(ctx, "/pb.PubsubService/Publish", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pubsubServiceClient) Subscribe(ctx context.Context, in *EventRequest, opts ...grpc.CallOption) (PubsubService_SubscribeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_PubsubService_serviceDesc.Streams[0], "/pb.PubsubService/Subscribe", opts...)
	if err != nil {
		return nil, err
	}
	x := &pubsubServiceSubscribeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type PubsubService_SubscribeClient interface {
	Recv() (*EventResponse, error)
	grpc.ClientStream
}

type pubsubServiceSubscribeClient struct {
	grpc.ClientStream
}

func (x *pubsubServiceSubscribeClient) Recv() (*EventResponse, error) {
	m := new(EventResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *pubsubServiceClient) UnSubscribe(ctx context.Context, in *EventRequest, opts ...grpc.CallOption) (PubsubService_UnSubscribeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_PubsubService_serviceDesc.Streams[1], "/pb.PubsubService/UnSubscribe", opts...)
	if err != nil {
		return nil, err
	}
	x := &pubsubServiceUnSubscribeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type PubsubService_UnSubscribeClient interface {
	Recv() (*EventResponse, error)
	grpc.ClientStream
}

type pubsubServiceUnSubscribeClient struct {
	grpc.ClientStream
}

func (x *pubsubServiceUnSubscribeClient) Recv() (*EventResponse, error) {
	m := new(EventResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// PubsubServiceServer is the server API for PubsubService service.
type PubsubServiceServer interface {
	Publish(context.Context, *EventMessage) (*EventMessage, error)
	Subscribe(*EventRequest, PubsubService_SubscribeServer) error
	UnSubscribe(*EventRequest, PubsubService_UnSubscribeServer) error
}

func RegisterPubsubServiceServer(s *grpc.Server, srv PubsubServiceServer) {
	s.RegisterService(&_PubsubService_serviceDesc, srv)
}

func _PubsubService_Publish_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PubsubServiceServer).Publish(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.PubsubService/Publish",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PubsubServiceServer).Publish(ctx, req.(*EventMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _PubsubService_Subscribe_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(EventRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(PubsubServiceServer).Subscribe(m, &pubsubServiceSubscribeServer{stream})
}

type PubsubService_SubscribeServer interface {
	Send(*EventResponse) error
	grpc.ServerStream
}

type pubsubServiceSubscribeServer struct {
	grpc.ServerStream
}

func (x *pubsubServiceSubscribeServer) Send(m *EventResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _PubsubService_UnSubscribe_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(EventRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(PubsubServiceServer).UnSubscribe(m, &pubsubServiceUnSubscribeServer{stream})
}

type PubsubService_UnSubscribeServer interface {
	Send(*EventResponse) error
	grpc.ServerStream
}

type pubsubServiceUnSubscribeServer struct {
	grpc.ServerStream
}

func (x *pubsubServiceUnSubscribeServer) Send(m *EventResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _PubsubService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.PubsubService",
	HandlerType: (*PubsubServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Publish",
			Handler:    _PubsubService_Publish_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Subscribe",
			Handler:       _PubsubService_Subscribe_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "UnSubscribe",
			Handler:       _PubsubService_UnSubscribe_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "event.proto",
}
