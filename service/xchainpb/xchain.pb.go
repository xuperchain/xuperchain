// Code generated by protoc-gen-go. DO NOT EDIT.
// source: xchain.proto

package xchainpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 通用请求Header
type ReqHeader struct {
	// 请求id
	LogId string `protobuf:"bytes,1,opt,name=log_id,json=logId,proto3" json:"log_id,omitempty"`
	// 标记请求方，方便问题定位
	SelfName             string   `protobuf:"bytes,2,opt,name=self_name,json=selfName,proto3" json:"self_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqHeader) Reset()         { *m = ReqHeader{} }
func (m *ReqHeader) String() string { return proto.CompactTextString(m) }
func (*ReqHeader) ProtoMessage()    {}
func (*ReqHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_db0991b9525664ca, []int{0}
}

func (m *ReqHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqHeader.Unmarshal(m, b)
}
func (m *ReqHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqHeader.Marshal(b, m, deterministic)
}
func (m *ReqHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqHeader.Merge(m, src)
}
func (m *ReqHeader) XXX_Size() int {
	return xxx_messageInfo_ReqHeader.Size(m)
}
func (m *ReqHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqHeader.DiscardUnknown(m)
}

var xxx_messageInfo_ReqHeader proto.InternalMessageInfo

func (m *ReqHeader) GetLogId() string {
	if m != nil {
		return m.LogId
	}
	return ""
}

func (m *ReqHeader) GetSelfName() string {
	if m != nil {
		return m.SelfName
	}
	return ""
}

// 通用响应Header
type RespHeader struct {
	// 请求id
	LogId string `protobuf:"bytes,1,opt,name=log_id,json=logId,proto3" json:"log_id,omitempty"`
	// 错误码
	ErrCode int64 `protobuf:"varint,2,opt,name=err_code,json=errCode,proto3" json:"err_code,omitempty"`
	// 错误信息
	ErrMsg string `protobuf:"bytes,3,opt,name=err_msg,json=errMsg,proto3" json:"err_msg,omitempty"`
	// 节点追踪信息，方便问题定位
	TraceId              string   `protobuf:"bytes,4,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RespHeader) Reset()         { *m = RespHeader{} }
func (m *RespHeader) String() string { return proto.CompactTextString(m) }
func (*RespHeader) ProtoMessage()    {}
func (*RespHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_db0991b9525664ca, []int{1}
}

func (m *RespHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RespHeader.Unmarshal(m, b)
}
func (m *RespHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RespHeader.Marshal(b, m, deterministic)
}
func (m *RespHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RespHeader.Merge(m, src)
}
func (m *RespHeader) XXX_Size() int {
	return xxx_messageInfo_RespHeader.Size(m)
}
func (m *RespHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_RespHeader.DiscardUnknown(m)
}

var xxx_messageInfo_RespHeader proto.InternalMessageInfo

func (m *RespHeader) GetLogId() string {
	if m != nil {
		return m.LogId
	}
	return ""
}

func (m *RespHeader) GetErrCode() int64 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *RespHeader) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *RespHeader) GetTraceId() string {
	if m != nil {
		return m.TraceId
	}
	return ""
}

type BaseReq struct {
	Header               *ReqHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *BaseReq) Reset()         { *m = BaseReq{} }
func (m *BaseReq) String() string { return proto.CompactTextString(m) }
func (*BaseReq) ProtoMessage()    {}
func (*BaseReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_db0991b9525664ca, []int{2}
}

func (m *BaseReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BaseReq.Unmarshal(m, b)
}
func (m *BaseReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BaseReq.Marshal(b, m, deterministic)
}
func (m *BaseReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BaseReq.Merge(m, src)
}
func (m *BaseReq) XXX_Size() int {
	return xxx_messageInfo_BaseReq.Size(m)
}
func (m *BaseReq) XXX_DiscardUnknown() {
	xxx_messageInfo_BaseReq.DiscardUnknown(m)
}

var xxx_messageInfo_BaseReq proto.InternalMessageInfo

func (m *BaseReq) GetHeader() *ReqHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

type BaseResp struct {
	Header               *RespHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *BaseResp) Reset()         { *m = BaseResp{} }
func (m *BaseResp) String() string { return proto.CompactTextString(m) }
func (*BaseResp) ProtoMessage()    {}
func (*BaseResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_db0991b9525664ca, []int{3}
}

func (m *BaseResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BaseResp.Unmarshal(m, b)
}
func (m *BaseResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BaseResp.Marshal(b, m, deterministic)
}
func (m *BaseResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BaseResp.Merge(m, src)
}
func (m *BaseResp) XXX_Size() int {
	return xxx_messageInfo_BaseResp.Size(m)
}
func (m *BaseResp) XXX_DiscardUnknown() {
	xxx_messageInfo_BaseResp.DiscardUnknown(m)
}

var xxx_messageInfo_BaseResp proto.InternalMessageInfo

func (m *BaseResp) GetHeader() *RespHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func init() {
	proto.RegisterType((*ReqHeader)(nil), "xchainpb.ReqHeader")
	proto.RegisterType((*RespHeader)(nil), "xchainpb.RespHeader")
	proto.RegisterType((*BaseReq)(nil), "xchainpb.BaseReq")
	proto.RegisterType((*BaseResp)(nil), "xchainpb.BaseResp")
}

func init() { proto.RegisterFile("xchain.proto", fileDescriptor_db0991b9525664ca) }

var fileDescriptor_db0991b9525664ca = []byte{
	// 261 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x90, 0xbd, 0x4f, 0xc3, 0x30,
	0x10, 0xc5, 0x29, 0x85, 0x7c, 0x1c, 0x2c, 0x1c, 0x20, 0x02, 0x2c, 0xc8, 0x13, 0x12, 0x28, 0x43,
	0x11, 0x88, 0x8d, 0x8f, 0x2e, 0x74, 0x00, 0x24, 0xb3, 0xb0, 0x45, 0x6e, 0x7c, 0x24, 0x11, 0x49,
	0xed, 0x9e, 0x0b, 0xe2, 0xcf, 0x47, 0x71, 0x1a, 0x40, 0x1d, 0xd8, 0x7c, 0xf7, 0xfc, 0x7b, 0xcf,
	0xcf, 0xb0, 0xfd, 0x95, 0x97, 0xaa, 0x9a, 0xa5, 0x96, 0xcd, 0xc2, 0x60, 0xd4, 0x4d, 0x76, 0x2a,
	0x6e, 0x20, 0x96, 0x34, 0x7f, 0x20, 0xa5, 0x89, 0x71, 0x1f, 0x82, 0xda, 0x14, 0x59, 0xa5, 0x93,
	0xc1, 0xc9, 0xe0, 0x34, 0x96, 0x9b, 0xb5, 0x29, 0x26, 0x1a, 0x8f, 0x21, 0x76, 0x54, 0xbf, 0x65,
	0x33, 0xd5, 0x50, 0xb2, 0xee, 0x95, 0xa8, 0x5d, 0x3c, 0xa9, 0x86, 0x04, 0x03, 0x48, 0x72, 0xf6,
	0x7f, 0x87, 0x43, 0x88, 0x88, 0x39, 0xcb, 0x8d, 0xee, 0x0c, 0x86, 0x32, 0x24, 0xe6, 0xb1, 0xd1,
	0x84, 0x07, 0xd0, 0x1e, 0xb3, 0xc6, 0x15, 0xc9, 0xd0, 0x23, 0x01, 0x31, 0x3f, 0xba, 0xa2, 0x65,
	0x16, 0xac, 0x72, 0x6a, 0xcd, 0x36, 0xbc, 0x12, 0xfa, 0x79, 0xa2, 0xc5, 0x15, 0x84, 0xf7, 0xca,
	0x91, 0xa4, 0x39, 0x9e, 0x41, 0x50, 0xfa, 0x68, 0x1f, 0xb8, 0x35, 0xda, 0x4d, 0xfb, 0x6a, 0xe9,
	0x4f, 0x2f, 0xb9, 0xbc, 0x22, 0xae, 0x21, 0xea, 0x38, 0x67, 0xf1, 0x7c, 0x05, 0xdc, 0xfb, 0x0b,
	0xf6, 0x7d, 0x7a, 0x72, 0x74, 0x0b, 0xe1, 0xeb, 0x87, 0x25, 0x7e, 0x7e, 0xc1, 0x4b, 0x80, 0x71,
	0x49, 0xf9, 0xfb, 0x5d, 0x5d, 0x7d, 0x12, 0xee, 0xfc, 0x62, 0xcb, 0x27, 0x1d, 0xe1, 0xea, 0xca,
	0x59, 0xb1, 0x36, 0x0d, 0xfc, 0xcf, 0x5f, 0x7c, 0x07, 0x00, 0x00, 0xff, 0xff, 0xe9, 0x0f, 0xd2,
	0xec, 0x89, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// XuperOSClient is the client API for XuperOS service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type XuperOSClient interface {
	// 示例接口
	CheckAlive(ctx context.Context, in *BaseReq, opts ...grpc.CallOption) (*BaseResp, error)
}

type xuperOSClient struct {
	cc grpc.ClientConnInterface
}

func NewXuperOSClient(cc grpc.ClientConnInterface) XuperOSClient {
	return &xuperOSClient{cc}
}

func (c *xuperOSClient) CheckAlive(ctx context.Context, in *BaseReq, opts ...grpc.CallOption) (*BaseResp, error) {
	out := new(BaseResp)
	err := c.cc.Invoke(ctx, "/xchainpb.XuperOS/CheckAlive", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// XuperOSServer is the server API for XuperOS service.
type XuperOSServer interface {
	// 示例接口
	CheckAlive(context.Context, *BaseReq) (*BaseResp, error)
}

// UnimplementedXuperOSServer can be embedded to have forward compatible implementations.
type UnimplementedXuperOSServer struct {
}

func (*UnimplementedXuperOSServer) CheckAlive(ctx context.Context, req *BaseReq) (*BaseResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckAlive not implemented")
}

func RegisterXuperOSServer(s *grpc.Server, srv XuperOSServer) {
	s.RegisterService(&_XuperOS_serviceDesc, srv)
}

func _XuperOS_CheckAlive_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BaseReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(XuperOSServer).CheckAlive(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/xchainpb.XuperOS/CheckAlive",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(XuperOSServer).CheckAlive(ctx, req.(*BaseReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _XuperOS_serviceDesc = grpc.ServiceDesc{
	ServiceName: "xchainpb.XuperOS",
	HandlerType: (*XuperOSServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CheckAlive",
			Handler:    _XuperOS_CheckAlive_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "xchain.proto",
}
