// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.7.1
// source: filter.proto

package pb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type EvmFilterBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header      *Header `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Bcname      string  `protobuf:"bytes,2,opt,name=bcname,proto3" json:"bcname,omitempty"`
	Start       string  `protobuf:"bytes,3,opt,name=start,proto3" json:"start,omitempty"`
	End         string  `protobuf:"bytes,4,opt,name=end,proto3" json:"end,omitempty"`
	Contract    string  `protobuf:"bytes,5,opt,name=contract,proto3" json:"contract,omitempty"`
	EventName   string  `protobuf:"bytes,6,opt,name=event_name,json=eventName,proto3" json:"event_name,omitempty"`
	Initiator   string  `protobuf:"bytes,7,opt,name=initiator,proto3" json:"initiator,omitempty"`
	AuthRequire string  `protobuf:"bytes,8,opt,name=auth_require,json=authRequire,proto3" json:"auth_require,omitempty"`
	FromAddr    string  `protobuf:"bytes,9,opt,name=from_addr,json=fromAddr,proto3" json:"from_addr,omitempty"`
	ToAddr      string  `protobuf:"bytes,10,opt,name=to_addr,json=toAddr,proto3" json:"to_addr,omitempty"`
	Time        int64   `protobuf:"varint,11,opt,name=time,proto3" json:"time,omitempty"`
	FilterID    string  `protobuf:"bytes,12,opt,name=FilterID,proto3" json:"FilterID,omitempty"`
}

func (x *EvmFilterBody) Reset() {
	*x = EvmFilterBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filter_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvmFilterBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvmFilterBody) ProtoMessage() {}

func (x *EvmFilterBody) ProtoReflect() protoreflect.Message {
	mi := &file_filter_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvmFilterBody.ProtoReflect.Descriptor instead.
func (*EvmFilterBody) Descriptor() ([]byte, []int) {
	return file_filter_proto_rawDescGZIP(), []int{0}
}

func (x *EvmFilterBody) GetHeader() *Header {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *EvmFilterBody) GetBcname() string {
	if x != nil {
		return x.Bcname
	}
	return ""
}

func (x *EvmFilterBody) GetStart() string {
	if x != nil {
		return x.Start
	}
	return ""
}

func (x *EvmFilterBody) GetEnd() string {
	if x != nil {
		return x.End
	}
	return ""
}

func (x *EvmFilterBody) GetContract() string {
	if x != nil {
		return x.Contract
	}
	return ""
}

func (x *EvmFilterBody) GetEventName() string {
	if x != nil {
		return x.EventName
	}
	return ""
}

func (x *EvmFilterBody) GetInitiator() string {
	if x != nil {
		return x.Initiator
	}
	return ""
}

func (x *EvmFilterBody) GetAuthRequire() string {
	if x != nil {
		return x.AuthRequire
	}
	return ""
}

func (x *EvmFilterBody) GetFromAddr() string {
	if x != nil {
		return x.FromAddr
	}
	return ""
}

func (x *EvmFilterBody) GetToAddr() string {
	if x != nil {
		return x.ToAddr
	}
	return ""
}

func (x *EvmFilterBody) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *EvmFilterBody) GetFilterID() string {
	if x != nil {
		return x.FilterID
	}
	return ""
}

type EvmFilterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header   *Header `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	FilterID string  `protobuf:"bytes,2,opt,name=FilterID,proto3" json:"FilterID,omitempty"`
	Status   string  `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *EvmFilterResponse) Reset() {
	*x = EvmFilterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filter_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvmFilterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvmFilterResponse) ProtoMessage() {}

func (x *EvmFilterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_filter_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvmFilterResponse.ProtoReflect.Descriptor instead.
func (*EvmFilterResponse) Descriptor() ([]byte, []int) {
	return file_filter_proto_rawDescGZIP(), []int{1}
}

func (x *EvmFilterResponse) GetHeader() *Header {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *EvmFilterResponse) GetFilterID() string {
	if x != nil {
		return x.FilterID
	}
	return ""
}

func (x *EvmFilterResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

var File_filter_proto protoreflect.FileDescriptor

var file_filter_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02,
	0x70, 0x62, 0x1a, 0x0c, 0x78, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xd5, 0x02, 0x0a, 0x0d, 0x65, 0x76, 0x6d, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x6f,
	0x64, 0x79, 0x12, 0x22, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x63, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x63, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x12,
	0x21, 0x0a, 0x0c, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x12,
	0x17, 0x0a, 0x07, 0x74, 0x6f, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x49, 0x44, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x49, 0x44, 0x22, 0x6b, 0x0a, 0x11, 0x65, 0x76, 0x6d, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a,
	0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x70, 0x62, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x32, 0xb2, 0x01, 0x0a, 0x09, 0x65, 0x76, 0x6d, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x12, 0x35, 0x0a, 0x09, 0x4e, 0x65, 0x77, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x12, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x65, 0x76, 0x6d, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42,
	0x6f, 0x64, 0x79, 0x1a, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x65, 0x76, 0x6d, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0f, 0x55, 0x6e,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x11, 0x2e,
	0x70, 0x62, 0x2e, 0x65, 0x76, 0x6d, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x6f, 0x64, 0x79,
	0x1a, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x65, 0x76, 0x6d, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x12, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x65, 0x76, 0x6d, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x42, 0x6f, 0x64, 0x79, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x65, 0x76, 0x6d,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x6f, 0x64, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_filter_proto_rawDescOnce sync.Once
	file_filter_proto_rawDescData = file_filter_proto_rawDesc
)

func file_filter_proto_rawDescGZIP() []byte {
	file_filter_proto_rawDescOnce.Do(func() {
		file_filter_proto_rawDescData = protoimpl.X.CompressGZIP(file_filter_proto_rawDescData)
	})
	return file_filter_proto_rawDescData
}

var file_filter_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_filter_proto_goTypes = []interface{}{
	(*EvmFilterBody)(nil),     // 0: pb.evmFilterBody
	(*EvmFilterResponse)(nil), // 1: pb.evmFilterResponse
	(*Header)(nil),            // 2: pb.Header
}
var file_filter_proto_depIdxs = []int32{
	2, // 0: pb.evmFilterBody.header:type_name -> pb.Header
	2, // 1: pb.evmFilterResponse.header:type_name -> pb.Header
	0, // 2: pb.evmFilter.NewFilter:input_type -> pb.evmFilterBody
	0, // 3: pb.evmFilter.UninstallFilter:input_type -> pb.evmFilterBody
	0, // 4: pb.evmFilter.GetFilter:input_type -> pb.evmFilterBody
	1, // 5: pb.evmFilter.NewFilter:output_type -> pb.evmFilterResponse
	1, // 6: pb.evmFilter.UninstallFilter:output_type -> pb.evmFilterResponse
	0, // 7: pb.evmFilter.GetFilter:output_type -> pb.evmFilterBody
	5, // [5:8] is the sub-list for method output_type
	2, // [2:5] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_filter_proto_init() }
func file_filter_proto_init() {
	if File_filter_proto != nil {
		return
	}
	file_xchain_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_filter_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvmFilterBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filter_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvmFilterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_filter_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_filter_proto_goTypes,
		DependencyIndexes: file_filter_proto_depIdxs,
		MessageInfos:      file_filter_proto_msgTypes,
	}.Build()
	File_filter_proto = out.File
	file_filter_proto_rawDesc = nil
	file_filter_proto_goTypes = nil
	file_filter_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// EvmFilterClient is the client API for EvmFilter service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EvmFilterClient interface {
	NewFilter(ctx context.Context, in *EvmFilterBody, opts ...grpc.CallOption) (*EvmFilterResponse, error)
	UninstallFilter(ctx context.Context, in *EvmFilterBody, opts ...grpc.CallOption) (*EvmFilterResponse, error)
	//  rpc GetFilterLogs(evmFilterBody) returns (stream Event);
	GetFilter(ctx context.Context, in *EvmFilterBody, opts ...grpc.CallOption) (*EvmFilterBody, error)
}

type evmFilterClient struct {
	cc grpc.ClientConnInterface
}

func NewEvmFilterClient(cc grpc.ClientConnInterface) EvmFilterClient {
	return &evmFilterClient{cc}
}

func (c *evmFilterClient) NewFilter(ctx context.Context, in *EvmFilterBody, opts ...grpc.CallOption) (*EvmFilterResponse, error) {
	out := new(EvmFilterResponse)
	err := c.cc.Invoke(ctx, "/pb.evmFilter/NewFilter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *evmFilterClient) UninstallFilter(ctx context.Context, in *EvmFilterBody, opts ...grpc.CallOption) (*EvmFilterResponse, error) {
	out := new(EvmFilterResponse)
	err := c.cc.Invoke(ctx, "/pb.evmFilter/UninstallFilter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *evmFilterClient) GetFilter(ctx context.Context, in *EvmFilterBody, opts ...grpc.CallOption) (*EvmFilterBody, error) {
	out := new(EvmFilterBody)
	err := c.cc.Invoke(ctx, "/pb.evmFilter/GetFilter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EvmFilterServer is the server API for EvmFilter service.
type EvmFilterServer interface {
	NewFilter(context.Context, *EvmFilterBody) (*EvmFilterResponse, error)
	UninstallFilter(context.Context, *EvmFilterBody) (*EvmFilterResponse, error)
	//  rpc GetFilterLogs(evmFilterBody) returns (stream Event);
	GetFilter(context.Context, *EvmFilterBody) (*EvmFilterBody, error)
}

// UnimplementedEvmFilterServer can be embedded to have forward compatible implementations.
type UnimplementedEvmFilterServer struct {
}

func (*UnimplementedEvmFilterServer) NewFilter(context.Context, *EvmFilterBody) (*EvmFilterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewFilter not implemented")
}
func (*UnimplementedEvmFilterServer) UninstallFilter(context.Context, *EvmFilterBody) (*EvmFilterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UninstallFilter not implemented")
}
func (*UnimplementedEvmFilterServer) GetFilter(context.Context, *EvmFilterBody) (*EvmFilterBody, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFilter not implemented")
}

func RegisterEvmFilterServer(s *grpc.Server, srv EvmFilterServer) {
	s.RegisterService(&_EvmFilter_serviceDesc, srv)
}

func _EvmFilter_NewFilter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EvmFilterBody)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EvmFilterServer).NewFilter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.evmFilter/NewFilter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EvmFilterServer).NewFilter(ctx, req.(*EvmFilterBody))
	}
	return interceptor(ctx, in, info, handler)
}

func _EvmFilter_UninstallFilter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EvmFilterBody)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EvmFilterServer).UninstallFilter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.evmFilter/UninstallFilter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EvmFilterServer).UninstallFilter(ctx, req.(*EvmFilterBody))
	}
	return interceptor(ctx, in, info, handler)
}

func _EvmFilter_GetFilter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EvmFilterBody)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EvmFilterServer).GetFilter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.evmFilter/GetFilter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EvmFilterServer).GetFilter(ctx, req.(*EvmFilterBody))
	}
	return interceptor(ctx, in, info, handler)
}

var _EvmFilter_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.evmFilter",
	HandlerType: (*EvmFilterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "NewFilter",
			Handler:    _EvmFilter_NewFilter_Handler,
		},
		{
			MethodName: "UninstallFilter",
			Handler:    _EvmFilter_UninstallFilter_Handler,
		},
		{
			MethodName: "GetFilter",
			Handler:    _EvmFilter_GetFilter_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "filter.proto",
}
