// Code generated by protoc-gen-go. DO NOT EDIT.
// source: xcheck.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ComplianceCheckResponse struct {
	Header               *Header        `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Signature            *SignatureInfo `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ComplianceCheckResponse) Reset()         { *m = ComplianceCheckResponse{} }
func (m *ComplianceCheckResponse) String() string { return proto.CompactTextString(m) }
func (*ComplianceCheckResponse) ProtoMessage()    {}
func (*ComplianceCheckResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_aefefab36e604b7f, []int{0}
}

func (m *ComplianceCheckResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ComplianceCheckResponse.Unmarshal(m, b)
}
func (m *ComplianceCheckResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ComplianceCheckResponse.Marshal(b, m, deterministic)
}
func (m *ComplianceCheckResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ComplianceCheckResponse.Merge(m, src)
}
func (m *ComplianceCheckResponse) XXX_Size() int {
	return xxx_messageInfo_ComplianceCheckResponse.Size(m)
}
func (m *ComplianceCheckResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ComplianceCheckResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ComplianceCheckResponse proto.InternalMessageInfo

func (m *ComplianceCheckResponse) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ComplianceCheckResponse) GetSignature() *SignatureInfo {
	if m != nil {
		return m.Signature
	}
	return nil
}

type TransferCheckResponse struct {
	Header               *Header        `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Signature            *SignatureInfo `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *TransferCheckResponse) Reset()         { *m = TransferCheckResponse{} }
func (m *TransferCheckResponse) String() string { return proto.CompactTextString(m) }
func (*TransferCheckResponse) ProtoMessage()    {}
func (*TransferCheckResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_aefefab36e604b7f, []int{1}
}

func (m *TransferCheckResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransferCheckResponse.Unmarshal(m, b)
}
func (m *TransferCheckResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransferCheckResponse.Marshal(b, m, deterministic)
}
func (m *TransferCheckResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransferCheckResponse.Merge(m, src)
}
func (m *TransferCheckResponse) XXX_Size() int {
	return xxx_messageInfo_TransferCheckResponse.Size(m)
}
func (m *TransferCheckResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TransferCheckResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TransferCheckResponse proto.InternalMessageInfo

func (m *TransferCheckResponse) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *TransferCheckResponse) GetSignature() *SignatureInfo {
	if m != nil {
		return m.Signature
	}
	return nil
}

func init() {
	proto.RegisterType((*ComplianceCheckResponse)(nil), "pb.ComplianceCheckResponse")
	proto.RegisterType((*TransferCheckResponse)(nil), "pb.TransferCheckResponse")
}

func init() { proto.RegisterFile("xcheck.proto", fileDescriptor_aefefab36e604b7f) }

var fileDescriptor_aefefab36e604b7f = []byte{
	// 230 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x90, 0x31, 0x4f, 0xc3, 0x30,
	0x10, 0x85, 0x95, 0x0e, 0x91, 0x38, 0x8a, 0x10, 0x96, 0x10, 0x25, 0x2c, 0x28, 0x0b, 0x4c, 0xb1,
	0x54, 0x16, 0x06, 0xb6, 0x2e, 0xb0, 0xa6, 0x1d, 0x58, 0x2f, 0xe1, 0x9a, 0x5a, 0x84, 0x3b, 0xcb,
	0x76, 0xa4, 0x8c, 0xfc, 0x74, 0x64, 0x07, 0x84, 0x88, 0x60, 0x64, 0xf3, 0x3b, 0x7f, 0xcf, 0xbe,
	0xf7, 0x60, 0x39, 0xb6, 0x07, 0x6a, 0x5f, 0x2b, 0xeb, 0x24, 0x88, 0x5a, 0xd8, 0xa6, 0xb8, 0xe9,
	0x44, 0xba, 0x9e, 0xd0, 0x1a, 0xaf, 0xa7, 0xa3, 0x46, 0x6b, 0x34, 0x32, 0x4b, 0xc0, 0x60, 0x84,
	0xfd, 0x04, 0x17, 0xd1, 0x8a, 0x86, 0x27, 0x55, 0x32, 0x5c, 0x6c, 0xe4, 0xcd, 0xf6, 0x06, 0xb9,
	0xa5, 0x4d, 0x7c, 0xb3, 0x26, 0x6f, 0x85, 0x3d, 0xa9, 0x12, 0xf2, 0x03, 0xe1, 0x0b, 0xb9, 0x55,
	0x76, 0x9d, 0xdd, 0x1e, 0xaf, 0xa1, 0xb2, 0x4d, 0xf5, 0x98, 0x26, 0xf5, 0xe7, 0x8d, 0xd2, 0x70,
	0xe4, 0x4d, 0xc7, 0x18, 0x06, 0x47, 0xab, 0x45, 0xc2, 0xce, 0x22, 0xb6, 0xfd, 0x1a, 0x3e, 0xf1,
	0x5e, 0xea, 0x6f, 0xa6, 0xec, 0xe1, 0x7c, 0xe7, 0x90, 0xfd, 0x9e, 0xdc, 0xff, 0xff, 0xb6, 0x7e,
	0xcf, 0x20, 0x7f, 0x4e, 0x4d, 0xa9, 0x07, 0x38, 0x9d, 0x05, 0x55, 0xcb, 0xe8, 0xdd, 0x8d, 0xdb,
	0x80, 0x61, 0xf0, 0xc5, 0x55, 0x54, 0x7f, 0x75, 0x71, 0x0f, 0x27, 0x3f, 0xd6, 0x9e, 0x79, 0x2f,
	0x93, 0xfa, 0x2d, 0x57, 0x93, 0xa7, 0x9e, 0xef, 0x3e, 0x02, 0x00, 0x00, 0xff, 0xff, 0xff, 0x41,
	0xac, 0x8a, 0xb2, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// XcheckClient is the client API for Xcheck service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type XcheckClient interface {
	ComplianceCheck(ctx context.Context, in *TxStatus, opts ...grpc.CallOption) (*ComplianceCheckResponse, error)
	TransferCheck(ctx context.Context, in *TxStatus, opts ...grpc.CallOption) (*TransferCheckResponse, error)
}

type xcheckClient struct {
	cc *grpc.ClientConn
}

func NewXcheckClient(cc *grpc.ClientConn) XcheckClient {
	return &xcheckClient{cc}
}

func (c *xcheckClient) ComplianceCheck(ctx context.Context, in *TxStatus, opts ...grpc.CallOption) (*ComplianceCheckResponse, error) {
	out := new(ComplianceCheckResponse)
	err := c.cc.Invoke(ctx, "/pb.Xcheck/ComplianceCheck", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *xcheckClient) TransferCheck(ctx context.Context, in *TxStatus, opts ...grpc.CallOption) (*TransferCheckResponse, error) {
	out := new(TransferCheckResponse)
	err := c.cc.Invoke(ctx, "/pb.Xcheck/TransferCheck", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// XcheckServer is the server API for Xcheck service.
type XcheckServer interface {
	ComplianceCheck(context.Context, *TxStatus) (*ComplianceCheckResponse, error)
	TransferCheck(context.Context, *TxStatus) (*TransferCheckResponse, error)
}

// UnimplementedXcheckServer can be embedded to have forward compatible implementations.
type UnimplementedXcheckServer struct {
}

func (*UnimplementedXcheckServer) ComplianceCheck(ctx context.Context, req *TxStatus) (*ComplianceCheckResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ComplianceCheck not implemented")
}
func (*UnimplementedXcheckServer) TransferCheck(ctx context.Context, req *TxStatus) (*TransferCheckResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TransferCheck not implemented")
}

func RegisterXcheckServer(s *grpc.Server, srv XcheckServer) {
	s.RegisterService(&_Xcheck_serviceDesc, srv)
}

func _Xcheck_ComplianceCheck_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TxStatus)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(XcheckServer).ComplianceCheck(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Xcheck/ComplianceCheck",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(XcheckServer).ComplianceCheck(ctx, req.(*TxStatus))
	}
	return interceptor(ctx, in, info, handler)
}

func _Xcheck_TransferCheck_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TxStatus)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(XcheckServer).TransferCheck(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Xcheck/TransferCheck",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(XcheckServer).TransferCheck(ctx, req.(*TxStatus))
	}
	return interceptor(ctx, in, info, handler)
}

var _Xcheck_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Xcheck",
	HandlerType: (*XcheckServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ComplianceCheck",
			Handler:    _Xcheck_ComplianceCheck_Handler,
		},
		{
			MethodName: "TransferCheck",
			Handler:    _Xcheck_TransferCheck_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "xcheck.proto",
}
