// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.7.1
// source: xendorser.proto

package pb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// 请求参数
type EndorserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header      *Header      `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	RequestName string       `protobuf:"bytes,2,opt,name=RequestName,proto3" json:"RequestName,omitempty"` // 请求名(类型)
	BcName      string       `protobuf:"bytes,3,opt,name=BcName,proto3" json:"BcName,omitempty"`           // 请求链名
	Fee         *Transaction `protobuf:"bytes,4,opt,name=Fee,proto3" json:"Fee,omitempty"`                 // 带签名的交易费Tx
	RequestData []byte       `protobuf:"bytes,5,opt,name=RequestData,proto3" json:"RequestData,omitempty"` // Json打包的数据
}

func (x *EndorserRequest) Reset() {
	*x = EndorserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xendorser_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EndorserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndorserRequest) ProtoMessage() {}

func (x *EndorserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_xendorser_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndorserRequest.ProtoReflect.Descriptor instead.
func (*EndorserRequest) Descriptor() ([]byte, []int) {
	return file_xendorser_proto_rawDescGZIP(), []int{0}
}

func (x *EndorserRequest) GetHeader() *Header {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *EndorserRequest) GetRequestName() string {
	if x != nil {
		return x.RequestName
	}
	return ""
}

func (x *EndorserRequest) GetBcName() string {
	if x != nil {
		return x.BcName
	}
	return ""
}

func (x *EndorserRequest) GetFee() *Transaction {
	if x != nil {
		return x.Fee
	}
	return nil
}

func (x *EndorserRequest) GetRequestData() []byte {
	if x != nil {
		return x.RequestData
	}
	return nil
}

type EndorserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header          *Header        `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	ResponseName    string         `protobuf:"bytes,2,opt,name=ResponseName,proto3" json:"ResponseName,omitempty"`
	EndorserAddress string         `protobuf:"bytes,3,opt,name=EndorserAddress,proto3" json:"EndorserAddress,omitempty"` // 背书服务地址
	EndorserSign    *SignatureInfo `protobuf:"bytes,4,opt,name=EndorserSign,proto3" json:"EndorserSign,omitempty"`       // 背书服务签名
	ResponseData    []byte         `protobuf:"bytes,5,opt,name=ResponseData,proto3" json:"ResponseData,omitempty"`
}

func (x *EndorserResponse) Reset() {
	*x = EndorserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xendorser_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EndorserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndorserResponse) ProtoMessage() {}

func (x *EndorserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_xendorser_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndorserResponse.ProtoReflect.Descriptor instead.
func (*EndorserResponse) Descriptor() ([]byte, []int) {
	return file_xendorser_proto_rawDescGZIP(), []int{1}
}

func (x *EndorserResponse) GetHeader() *Header {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *EndorserResponse) GetResponseName() string {
	if x != nil {
		return x.ResponseName
	}
	return ""
}

func (x *EndorserResponse) GetEndorserAddress() string {
	if x != nil {
		return x.EndorserAddress
	}
	return ""
}

func (x *EndorserResponse) GetEndorserSign() *SignatureInfo {
	if x != nil {
		return x.EndorserSign
	}
	return nil
}

func (x *EndorserResponse) GetResponseData() []byte {
	if x != nil {
		return x.ResponseData
	}
	return nil
}

var File_xendorser_proto protoreflect.FileDescriptor

var file_xendorser_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x78, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x02, 0x70, 0x62, 0x1a, 0x0c, 0x78, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xb4, 0x01, 0x0a, 0x0f, 0x45, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x42,
	0x63, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x42, 0x63, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x03, 0x46, 0x65, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x03, 0x46, 0x65, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x22, 0xdf, 0x01, 0x0a, 0x10, 0x45, 0x6e, 0x64,
	0x6f, 0x72, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a,
	0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x70, 0x62, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x12, 0x22, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x45, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x65,
	0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x45, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x35, 0x0a, 0x0c, 0x45, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x45, 0x6e, 0x64, 0x6f, 0x72, 0x73,
	0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x32, 0x63, 0x0a, 0x09, 0x78, 0x65,
	0x6e, 0x64, 0x6f, 0x72, 0x73, 0x65, 0x72, 0x12, 0x56, 0x0a, 0x0c, 0x45, 0x6e, 0x64, 0x6f, 0x72,
	0x73, 0x65, 0x72, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6e, 0x64,
	0x6f, 0x72, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x70,
	0x62, 0x2e, 0x45, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x22, 0x10, 0x2f, 0x76, 0x31, 0x2f,
	0x65, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x65, 0x72, 0x63, 0x61, 0x6c, 0x6c, 0x3a, 0x01, 0x2a, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_xendorser_proto_rawDescOnce sync.Once
	file_xendorser_proto_rawDescData = file_xendorser_proto_rawDesc
)

func file_xendorser_proto_rawDescGZIP() []byte {
	file_xendorser_proto_rawDescOnce.Do(func() {
		file_xendorser_proto_rawDescData = protoimpl.X.CompressGZIP(file_xendorser_proto_rawDescData)
	})
	return file_xendorser_proto_rawDescData
}

var file_xendorser_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_xendorser_proto_goTypes = []interface{}{
	(*EndorserRequest)(nil),  // 0: pb.EndorserRequest
	(*EndorserResponse)(nil), // 1: pb.EndorserResponse
	(*Header)(nil),           // 2: pb.Header
	(*Transaction)(nil),      // 3: pb.Transaction
	(*SignatureInfo)(nil),    // 4: pb.SignatureInfo
}
var file_xendorser_proto_depIdxs = []int32{
	2, // 0: pb.EndorserRequest.header:type_name -> pb.Header
	3, // 1: pb.EndorserRequest.Fee:type_name -> pb.Transaction
	2, // 2: pb.EndorserResponse.header:type_name -> pb.Header
	4, // 3: pb.EndorserResponse.EndorserSign:type_name -> pb.SignatureInfo
	0, // 4: pb.xendorser.EndorserCall:input_type -> pb.EndorserRequest
	1, // 5: pb.xendorser.EndorserCall:output_type -> pb.EndorserResponse
	5, // [5:6] is the sub-list for method output_type
	4, // [4:5] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_xendorser_proto_init() }
func file_xendorser_proto_init() {
	if File_xendorser_proto != nil {
		return
	}
	file_xchain_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_xendorser_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EndorserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xendorser_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EndorserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_xendorser_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_xendorser_proto_goTypes,
		DependencyIndexes: file_xendorser_proto_depIdxs,
		MessageInfos:      file_xendorser_proto_msgTypes,
	}.Build()
	File_xendorser_proto = out.File
	file_xendorser_proto_rawDesc = nil
	file_xendorser_proto_goTypes = nil
	file_xendorser_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// XendorserClient is the client API for Xendorser service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type XendorserClient interface {
	EndorserCall(ctx context.Context, in *EndorserRequest, opts ...grpc.CallOption) (*EndorserResponse, error)
}

type xendorserClient struct {
	cc grpc.ClientConnInterface
}

func NewXendorserClient(cc grpc.ClientConnInterface) XendorserClient {
	return &xendorserClient{cc}
}

func (c *xendorserClient) EndorserCall(ctx context.Context, in *EndorserRequest, opts ...grpc.CallOption) (*EndorserResponse, error) {
	out := new(EndorserResponse)
	err := c.cc.Invoke(ctx, "/pb.xendorser/EndorserCall", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// XendorserServer is the server API for Xendorser service.
type XendorserServer interface {
	EndorserCall(context.Context, *EndorserRequest) (*EndorserResponse, error)
}

// UnimplementedXendorserServer can be embedded to have forward compatible implementations.
type UnimplementedXendorserServer struct {
}

func (*UnimplementedXendorserServer) EndorserCall(context.Context, *EndorserRequest) (*EndorserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EndorserCall not implemented")
}

func RegisterXendorserServer(s *grpc.Server, srv XendorserServer) {
	s.RegisterService(&_Xendorser_serviceDesc, srv)
}

func _Xendorser_EndorserCall_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EndorserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(XendorserServer).EndorserCall(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.xendorser/EndorserCall",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(XendorserServer).EndorserCall(ctx, req.(*EndorserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Xendorser_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.xendorser",
	HandlerType: (*XendorserServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "EndorserCall",
			Handler:    _Xendorser_EndorserCall_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "xendorser.proto",
}
