// Code generated by protoc-gen-go. DO NOT EDIT.
// source: xendorser.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 请求参数
type EndorserRequest struct {
	Header               *Header      `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	RequestName          string       `protobuf:"bytes,2,opt,name=RequestName,proto3" json:"RequestName,omitempty"`
	BcName               string       `protobuf:"bytes,3,opt,name=BcName,proto3" json:"BcName,omitempty"`
	Fee                  *Transaction `protobuf:"bytes,4,opt,name=Fee,proto3" json:"Fee,omitempty"`
	RequestData          []byte       `protobuf:"bytes,5,opt,name=RequestData,proto3" json:"RequestData,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *EndorserRequest) Reset()         { *m = EndorserRequest{} }
func (m *EndorserRequest) String() string { return proto.CompactTextString(m) }
func (*EndorserRequest) ProtoMessage()    {}
func (*EndorserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_eeaf870ebd3b57e1, []int{0}
}

func (m *EndorserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EndorserRequest.Unmarshal(m, b)
}
func (m *EndorserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EndorserRequest.Marshal(b, m, deterministic)
}
func (m *EndorserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EndorserRequest.Merge(m, src)
}
func (m *EndorserRequest) XXX_Size() int {
	return xxx_messageInfo_EndorserRequest.Size(m)
}
func (m *EndorserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EndorserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EndorserRequest proto.InternalMessageInfo

func (m *EndorserRequest) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *EndorserRequest) GetRequestName() string {
	if m != nil {
		return m.RequestName
	}
	return ""
}

func (m *EndorserRequest) GetBcName() string {
	if m != nil {
		return m.BcName
	}
	return ""
}

func (m *EndorserRequest) GetFee() *Transaction {
	if m != nil {
		return m.Fee
	}
	return nil
}

func (m *EndorserRequest) GetRequestData() []byte {
	if m != nil {
		return m.RequestData
	}
	return nil
}

type EndorserResponse struct {
	Header               *Header        `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	ResponseName         string         `protobuf:"bytes,2,opt,name=ResponseName,proto3" json:"ResponseName,omitempty"`
	EndorserAddress      string         `protobuf:"bytes,3,opt,name=EndorserAddress,proto3" json:"EndorserAddress,omitempty"`
	EndorserSign         *SignatureInfo `protobuf:"bytes,4,opt,name=EndorserSign,proto3" json:"EndorserSign,omitempty"`
	ResponseData         []byte         `protobuf:"bytes,5,opt,name=ResponseData,proto3" json:"ResponseData,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *EndorserResponse) Reset()         { *m = EndorserResponse{} }
func (m *EndorserResponse) String() string { return proto.CompactTextString(m) }
func (*EndorserResponse) ProtoMessage()    {}
func (*EndorserResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_eeaf870ebd3b57e1, []int{1}
}

func (m *EndorserResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EndorserResponse.Unmarshal(m, b)
}
func (m *EndorserResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EndorserResponse.Marshal(b, m, deterministic)
}
func (m *EndorserResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EndorserResponse.Merge(m, src)
}
func (m *EndorserResponse) XXX_Size() int {
	return xxx_messageInfo_EndorserResponse.Size(m)
}
func (m *EndorserResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EndorserResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EndorserResponse proto.InternalMessageInfo

func (m *EndorserResponse) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *EndorserResponse) GetResponseName() string {
	if m != nil {
		return m.ResponseName
	}
	return ""
}

func (m *EndorserResponse) GetEndorserAddress() string {
	if m != nil {
		return m.EndorserAddress
	}
	return ""
}

func (m *EndorserResponse) GetEndorserSign() *SignatureInfo {
	if m != nil {
		return m.EndorserSign
	}
	return nil
}

func (m *EndorserResponse) GetResponseData() []byte {
	if m != nil {
		return m.ResponseData
	}
	return nil
}

func init() {
	proto.RegisterType((*EndorserRequest)(nil), "pb.EndorserRequest")
	proto.RegisterType((*EndorserResponse)(nil), "pb.EndorserResponse")
}

func init() { proto.RegisterFile("xendorser.proto", fileDescriptor_eeaf870ebd3b57e1) }

var fileDescriptor_eeaf870ebd3b57e1 = []byte{
	// 331 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0xbf, 0x4e, 0xc3, 0x30,
	0x10, 0xc6, 0xe5, 0x16, 0x2a, 0xd5, 0x8d, 0xd4, 0x62, 0xfe, 0x28, 0x2a, 0x4b, 0xc8, 0x42, 0xc4,
	0xd0, 0x88, 0x22, 0x16, 0x36, 0xfe, 0x0a, 0x16, 0x86, 0x80, 0xd8, 0xaf, 0xc9, 0xd1, 0x46, 0x0a,
	0x76, 0xb0, 0x5d, 0xd4, 0x99, 0x57, 0xe0, 0x55, 0x78, 0x13, 0x1e, 0x80, 0x85, 0x07, 0x41, 0x4e,
	0x5c, 0xea, 0x74, 0x62, 0xcb, 0xfd, 0xee, 0xd3, 0x77, 0xdf, 0xe5, 0x4c, 0xfb, 0x0b, 0xe4, 0x99,
	0x90, 0x0a, 0xe5, 0xa8, 0x94, 0x42, 0x0b, 0xd6, 0x2a, 0x27, 0xc3, 0xc3, 0xa9, 0x10, 0xd3, 0x02,
	0xa1, 0xcc, 0x55, 0x5c, 0x7f, 0xc6, 0x50, 0xe6, 0x31, 0x70, 0x2e, 0x34, 0xe8, 0x5c, 0x70, 0x55,
	0x8b, 0x87, 0xde, 0x22, 0x9d, 0x41, 0xce, 0xeb, 0x2a, 0xfc, 0x24, 0xb4, 0x7f, 0x6d, 0xdd, 0x12,
	0x7c, 0x9d, 0xa3, 0xd2, 0x2c, 0xa4, 0x9d, 0x19, 0x42, 0x86, 0xd2, 0x27, 0x01, 0x89, 0x7a, 0x63,
	0x3a, 0x2a, 0x27, 0xa3, 0xdb, 0x8a, 0x24, 0xb6, 0xc3, 0x02, 0xda, 0xb3, 0xf2, 0x7b, 0x78, 0x41,
	0xbf, 0x15, 0x90, 0xa8, 0x9b, 0xb8, 0x88, 0xed, 0xd1, 0xce, 0x45, 0x5a, 0x35, 0xdb, 0x55, 0xd3,
	0x56, 0xec, 0x80, 0xb6, 0x6f, 0x10, 0xfd, 0x8d, 0xca, 0xba, 0x6f, 0xac, 0x1f, 0x25, 0x70, 0x05,
	0xa9, 0x09, 0x99, 0x98, 0x9e, 0x63, 0x7e, 0x05, 0x1a, 0xfc, 0xcd, 0x80, 0x44, 0x5e, 0xe2, 0xa2,
	0xf0, 0x9b, 0xd0, 0xc1, 0x2a, 0xb6, 0x2a, 0x05, 0x57, 0xf8, 0xaf, 0xdc, 0x21, 0xf5, 0x96, 0x7a,
	0x27, 0x78, 0x83, 0xb1, 0x68, 0xf5, 0x4b, 0xce, 0xb3, 0x4c, 0xa2, 0x52, 0x76, 0x85, 0x75, 0xcc,
	0x4e, 0xa9, 0xb7, 0x44, 0x0f, 0xf9, 0x94, 0xdb, 0xa5, 0xb6, 0xcc, 0x5c, 0x53, 0x83, 0x9e, 0x4b,
	0xbc, 0xe3, 0xcf, 0x22, 0x69, 0xc8, 0xdc, 0x10, 0xce, 0x82, 0x0d, 0x36, 0x4e, 0x69, 0xf7, 0xef,
	0xcc, 0xec, 0x69, 0x35, 0xe7, 0x12, 0x8a, 0x82, 0x6d, 0x9b, 0x09, 0x6b, 0x67, 0x1b, 0xee, 0x34,
	0x61, 0xed, 0x15, 0xee, 0xbf, 0x7f, 0xfd, 0x7c, 0xb4, 0x76, 0xc3, 0x41, 0xfc, 0x76, 0x1c, 0xd7,
	0x86, 0x42, 0xa6, 0x50, 0x14, 0x67, 0xe4, 0x68, 0xd2, 0xa9, 0x1e, 0xc1, 0xc9, 0x6f, 0x00, 0x00,
	0x00, 0xff, 0xff, 0x3f, 0xfd, 0xd6, 0xe7, 0x52, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// XendorserClient is the client API for Xendorser service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type XendorserClient interface {
	EndorserCall(ctx context.Context, in *EndorserRequest, opts ...grpc.CallOption) (*EndorserResponse, error)
}

type xendorserClient struct {
	cc *grpc.ClientConn
}

func NewXendorserClient(cc *grpc.ClientConn) XendorserClient {
	return &xendorserClient{cc}
}

func (c *xendorserClient) EndorserCall(ctx context.Context, in *EndorserRequest, opts ...grpc.CallOption) (*EndorserResponse, error) {
	out := new(EndorserResponse)
	err := c.cc.Invoke(ctx, "/pb.xendorser/EndorserCall", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// XendorserServer is the server API for Xendorser service.
type XendorserServer interface {
	EndorserCall(context.Context, *EndorserRequest) (*EndorserResponse, error)
}

// UnimplementedXendorserServer can be embedded to have forward compatible implementations.
type UnimplementedXendorserServer struct {
}

func (*UnimplementedXendorserServer) EndorserCall(ctx context.Context, req *EndorserRequest) (*EndorserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EndorserCall not implemented")
}

func RegisterXendorserServer(s *grpc.Server, srv XendorserServer) {
	s.RegisterService(&_Xendorser_serviceDesc, srv)
}

func _Xendorser_EndorserCall_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EndorserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(XendorserServer).EndorserCall(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.xendorser/EndorserCall",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(XendorserServer).EndorserCall(ctx, req.(*EndorserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Xendorser_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.xendorser",
	HandlerType: (*XendorserServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "EndorserCall",
			Handler:    _Xendorser_EndorserCall_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "xendorser.proto",
}
