// Code generated by protoc-gen-go. DO NOT EDIT.
// source: xchain_spv.proto

package pb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// ReturnCode is the code for client
type ReturnCode int32

const (
	// Operation success
	ReturnCode_RETURNSUCCESS ReturnCode = 0
	// Err about Account
	ReturnCode_INTERNALERR      ReturnCode = 101000
	ReturnCode_FILENOTEXIST     ReturnCode = 101002
	ReturnCode_PARAMERR         ReturnCode = 101003
	ReturnCode_HTTPREQUERTFAIL  ReturnCode = 101004
	ReturnCode_HTTPRESPONSEFAIL ReturnCode = 101005
	ReturnCode_ACCOUNTNOTEXIST  ReturnCode = 101008
	ReturnCode_PWNOTEXIST       ReturnCode = 101009
	ReturnCode_PWEXIST          ReturnCode = 101010
	ReturnCode_NOTLOGIN         ReturnCode = 101012
	// Err about Transaction
	ReturnCode_CONNECTNODEFAIL    ReturnCode = 102001
	ReturnCode_UTXONOTENOUGH      ReturnCode = 102002
	ReturnCode_ADDRESSINVALID     ReturnCode = 102003
	ReturnCode_FEEINVALID         ReturnCode = 102004
	ReturnCode_CONNECTREFUSED     ReturnCode = 102005
	ReturnCode_UTXOENCRYPTERR     ReturnCode = 102006
	ReturnCode_FEENOTENOUGN       ReturnCode = 102007
	ReturnCode_PARAMSINVALID      ReturnCode = 102008
	ReturnCode_TXSIGNERR          ReturnCode = 102009
	ReturnCode_REPOSTTXERR        ReturnCode = 102010
	ReturnCode_BLOCKCHAINNOTEXIST ReturnCode = 102011
	ReturnCode_SERVERERR          ReturnCode = 102012
)

var ReturnCode_name = map[int32]string{
	0:      "RETURNSUCCESS",
	101000: "INTERNALERR",
	101002: "FILENOTEXIST",
	101003: "PARAMERR",
	101004: "HTTPREQUERTFAIL",
	101005: "HTTPRESPONSEFAIL",
	101008: "ACCOUNTNOTEXIST",
	101009: "PWNOTEXIST",
	101010: "PWEXIST",
	101012: "NOTLOGIN",
	102001: "CONNECTNODEFAIL",
	102002: "UTXONOTENOUGH",
	102003: "ADDRESSINVALID",
	102004: "FEEINVALID",
	102005: "CONNECTREFUSED",
	102006: "UTXOENCRYPTERR",
	102007: "FEENOTENOUGN",
	102008: "PARAMSINVALID",
	102009: "TXSIGNERR",
	102010: "REPOSTTXERR",
	102011: "BLOCKCHAINNOTEXIST",
	102012: "SERVERERR",
}

var ReturnCode_value = map[string]int32{
	"RETURNSUCCESS":      0,
	"INTERNALERR":        101000,
	"FILENOTEXIST":       101002,
	"PARAMERR":           101003,
	"HTTPREQUERTFAIL":    101004,
	"HTTPRESPONSEFAIL":   101005,
	"ACCOUNTNOTEXIST":    101008,
	"PWNOTEXIST":         101009,
	"PWEXIST":            101010,
	"NOTLOGIN":           101012,
	"CONNECTNODEFAIL":    102001,
	"UTXONOTENOUGH":      102002,
	"ADDRESSINVALID":     102003,
	"FEEINVALID":         102004,
	"CONNECTREFUSED":     102005,
	"UTXOENCRYPTERR":     102006,
	"FEENOTENOUGN":       102007,
	"PARAMSINVALID":      102008,
	"TXSIGNERR":          102009,
	"REPOSTTXERR":        102010,
	"BLOCKCHAINNOTEXIST": 102011,
	"SERVERERR":          102012,
}

func (x ReturnCode) String() string {
	return proto.EnumName(ReturnCode_name, int32(x))
}

func (ReturnCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_85c5cd9f6993900d, []int{0}
}

// 助记词、私钥的json、公钥的json、钱包地址
type ECDSAAccount struct {
	EntropyByte          []byte   `protobuf:"bytes,1,opt,name=entropyByte,proto3" json:"entropyByte,omitempty"`
	Mnemonic             string   `protobuf:"bytes,2,opt,name=mnemonic,proto3" json:"mnemonic,omitempty"`
	JsonPrivateKey       string   `protobuf:"bytes,3,opt,name=jsonPrivateKey,proto3" json:"jsonPrivateKey,omitempty"`
	JsonPublicKey        string   `protobuf:"bytes,4,opt,name=jsonPublicKey,proto3" json:"jsonPublicKey,omitempty"`
	Address              string   `protobuf:"bytes,5,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ECDSAAccount) Reset()         { *m = ECDSAAccount{} }
func (m *ECDSAAccount) String() string { return proto.CompactTextString(m) }
func (*ECDSAAccount) ProtoMessage()    {}
func (*ECDSAAccount) Descriptor() ([]byte, []int) {
	return fileDescriptor_85c5cd9f6993900d, []int{0}
}

func (m *ECDSAAccount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ECDSAAccount.Unmarshal(m, b)
}
func (m *ECDSAAccount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ECDSAAccount.Marshal(b, m, deterministic)
}
func (m *ECDSAAccount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ECDSAAccount.Merge(m, src)
}
func (m *ECDSAAccount) XXX_Size() int {
	return xxx_messageInfo_ECDSAAccount.Size(m)
}
func (m *ECDSAAccount) XXX_DiscardUnknown() {
	xxx_messageInfo_ECDSAAccount.DiscardUnknown(m)
}

var xxx_messageInfo_ECDSAAccount proto.InternalMessageInfo

func (m *ECDSAAccount) GetEntropyByte() []byte {
	if m != nil {
		return m.EntropyByte
	}
	return nil
}

func (m *ECDSAAccount) GetMnemonic() string {
	if m != nil {
		return m.Mnemonic
	}
	return ""
}

func (m *ECDSAAccount) GetJsonPrivateKey() string {
	if m != nil {
		return m.JsonPrivateKey
	}
	return ""
}

func (m *ECDSAAccount) GetJsonPublicKey() string {
	if m != nil {
		return m.JsonPublicKey
	}
	return ""
}

func (m *ECDSAAccount) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

// 助记词、随机字节数组、钱包地址
type ECDSAInfo struct {
	EntropyByte          []byte   `protobuf:"bytes,1,opt,name=entropyByte,proto3" json:"entropyByte,omitempty"`
	Mnemonic             string   `protobuf:"bytes,2,opt,name=mnemonic,proto3" json:"mnemonic,omitempty"`
	Address              string   `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ECDSAInfo) Reset()         { *m = ECDSAInfo{} }
func (m *ECDSAInfo) String() string { return proto.CompactTextString(m) }
func (*ECDSAInfo) ProtoMessage()    {}
func (*ECDSAInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_85c5cd9f6993900d, []int{1}
}

func (m *ECDSAInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ECDSAInfo.Unmarshal(m, b)
}
func (m *ECDSAInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ECDSAInfo.Marshal(b, m, deterministic)
}
func (m *ECDSAInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ECDSAInfo.Merge(m, src)
}
func (m *ECDSAInfo) XXX_Size() int {
	return xxx_messageInfo_ECDSAInfo.Size(m)
}
func (m *ECDSAInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ECDSAInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ECDSAInfo proto.InternalMessageInfo

func (m *ECDSAInfo) GetEntropyByte() []byte {
	if m != nil {
		return m.EntropyByte
	}
	return nil
}

func (m *ECDSAInfo) GetMnemonic() string {
	if m != nil {
		return m.Mnemonic
	}
	return ""
}

func (m *ECDSAInfo) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

// 钱包地址、被加密后的私钥、被加密后的助记词
type ECDSAAccountFromCloud struct {
	Address                 string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	JsonEncryptedPrivateKey string   `protobuf:"bytes,2,opt,name=jsonEncryptedPrivateKey,proto3" json:"jsonEncryptedPrivateKey,omitempty"`
	EncryptedMnemonic       string   `protobuf:"bytes,3,opt,name=encryptedMnemonic,proto3" json:"encryptedMnemonic,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *ECDSAAccountFromCloud) Reset()         { *m = ECDSAAccountFromCloud{} }
func (m *ECDSAAccountFromCloud) String() string { return proto.CompactTextString(m) }
func (*ECDSAAccountFromCloud) ProtoMessage()    {}
func (*ECDSAAccountFromCloud) Descriptor() ([]byte, []int) {
	return fileDescriptor_85c5cd9f6993900d, []int{2}
}

func (m *ECDSAAccountFromCloud) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ECDSAAccountFromCloud.Unmarshal(m, b)
}
func (m *ECDSAAccountFromCloud) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ECDSAAccountFromCloud.Marshal(b, m, deterministic)
}
func (m *ECDSAAccountFromCloud) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ECDSAAccountFromCloud.Merge(m, src)
}
func (m *ECDSAAccountFromCloud) XXX_Size() int {
	return xxx_messageInfo_ECDSAAccountFromCloud.Size(m)
}
func (m *ECDSAAccountFromCloud) XXX_DiscardUnknown() {
	xxx_messageInfo_ECDSAAccountFromCloud.DiscardUnknown(m)
}

var xxx_messageInfo_ECDSAAccountFromCloud proto.InternalMessageInfo

func (m *ECDSAAccountFromCloud) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *ECDSAAccountFromCloud) GetJsonEncryptedPrivateKey() string {
	if m != nil {
		return m.JsonEncryptedPrivateKey
	}
	return ""
}

func (m *ECDSAAccountFromCloud) GetEncryptedMnemonic() string {
	if m != nil {
		return m.EncryptedMnemonic
	}
	return ""
}

// 钱包地址、被加密后的私钥、被加密后的助记词、支付密码的明文
type ECDSAAccountToCloud struct {
	Address                 string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	JsonEncryptedPrivateKey string   `protobuf:"bytes,2,opt,name=jsonEncryptedPrivateKey,proto3" json:"jsonEncryptedPrivateKey,omitempty"`
	EncryptedMnemonic       string   `protobuf:"bytes,3,opt,name=encryptedMnemonic,proto3" json:"encryptedMnemonic,omitempty"`
	Password                string   `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *ECDSAAccountToCloud) Reset()         { *m = ECDSAAccountToCloud{} }
func (m *ECDSAAccountToCloud) String() string { return proto.CompactTextString(m) }
func (*ECDSAAccountToCloud) ProtoMessage()    {}
func (*ECDSAAccountToCloud) Descriptor() ([]byte, []int) {
	return fileDescriptor_85c5cd9f6993900d, []int{3}
}

func (m *ECDSAAccountToCloud) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ECDSAAccountToCloud.Unmarshal(m, b)
}
func (m *ECDSAAccountToCloud) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ECDSAAccountToCloud.Marshal(b, m, deterministic)
}
func (m *ECDSAAccountToCloud) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ECDSAAccountToCloud.Merge(m, src)
}
func (m *ECDSAAccountToCloud) XXX_Size() int {
	return xxx_messageInfo_ECDSAAccountToCloud.Size(m)
}
func (m *ECDSAAccountToCloud) XXX_DiscardUnknown() {
	xxx_messageInfo_ECDSAAccountToCloud.DiscardUnknown(m)
}

var xxx_messageInfo_ECDSAAccountToCloud proto.InternalMessageInfo

func (m *ECDSAAccountToCloud) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *ECDSAAccountToCloud) GetJsonEncryptedPrivateKey() string {
	if m != nil {
		return m.JsonEncryptedPrivateKey
	}
	return ""
}

func (m *ECDSAAccountToCloud) GetEncryptedMnemonic() string {
	if m != nil {
		return m.EncryptedMnemonic
	}
	return ""
}

func (m *ECDSAAccountToCloud) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

// 全节点
type Node struct {
	Host                 []byte   `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	UtxoQueryUrl         []byte   `protobuf:"bytes,2,opt,name=utxoQueryUrl,proto3" json:"utxoQueryUrl,omitempty"`
	TxPostUrl            []byte   `protobuf:"bytes,3,opt,name=txPostUrl,proto3" json:"txPostUrl,omitempty"`
	BalanceQueryUrl      []byte   `protobuf:"bytes,4,opt,name=balanceQueryUrl,proto3" json:"balanceQueryUrl,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Node) Reset()         { *m = Node{} }
func (m *Node) String() string { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()    {}
func (*Node) Descriptor() ([]byte, []int) {
	return fileDescriptor_85c5cd9f6993900d, []int{4}
}

func (m *Node) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Node.Unmarshal(m, b)
}
func (m *Node) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Node.Marshal(b, m, deterministic)
}
func (m *Node) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Node.Merge(m, src)
}
func (m *Node) XXX_Size() int {
	return xxx_messageInfo_Node.Size(m)
}
func (m *Node) XXX_DiscardUnknown() {
	xxx_messageInfo_Node.DiscardUnknown(m)
}

var xxx_messageInfo_Node proto.InternalMessageInfo

func (m *Node) GetHost() []byte {
	if m != nil {
		return m.Host
	}
	return nil
}

func (m *Node) GetUtxoQueryUrl() []byte {
	if m != nil {
		return m.UtxoQueryUrl
	}
	return nil
}

func (m *Node) GetTxPostUrl() []byte {
	if m != nil {
		return m.TxPostUrl
	}
	return nil
}

func (m *Node) GetBalanceQueryUrl() []byte {
	if m != nil {
		return m.BalanceQueryUrl
	}
	return nil
}

// 交易输入列表
type TxInputs struct {
	TxInputList          []*TxInput `protobuf:"bytes,1,rep,name=txInputList,proto3" json:"txInputList,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TxInputs) Reset()         { *m = TxInputs{} }
func (m *TxInputs) String() string { return proto.CompactTextString(m) }
func (*TxInputs) ProtoMessage()    {}
func (*TxInputs) Descriptor() ([]byte, []int) {
	return fileDescriptor_85c5cd9f6993900d, []int{5}
}

func (m *TxInputs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TxInputs.Unmarshal(m, b)
}
func (m *TxInputs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TxInputs.Marshal(b, m, deterministic)
}
func (m *TxInputs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxInputs.Merge(m, src)
}
func (m *TxInputs) XXX_Size() int {
	return xxx_messageInfo_TxInputs.Size(m)
}
func (m *TxInputs) XXX_DiscardUnknown() {
	xxx_messageInfo_TxInputs.DiscardUnknown(m)
}

var xxx_messageInfo_TxInputs proto.InternalMessageInfo

func (m *TxInputs) GetTxInputList() []*TxInput {
	if m != nil {
		return m.TxInputList
	}
	return nil
}

// 交易输出列表
type TxOutputs struct {
	TxOutputList         []*TxOutput `protobuf:"bytes,1,rep,name=txOutputList,proto3" json:"txOutputList,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *TxOutputs) Reset()         { *m = TxOutputs{} }
func (m *TxOutputs) String() string { return proto.CompactTextString(m) }
func (*TxOutputs) ProtoMessage()    {}
func (*TxOutputs) Descriptor() ([]byte, []int) {
	return fileDescriptor_85c5cd9f6993900d, []int{6}
}

func (m *TxOutputs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TxOutputs.Unmarshal(m, b)
}
func (m *TxOutputs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TxOutputs.Marshal(b, m, deterministic)
}
func (m *TxOutputs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxOutputs.Merge(m, src)
}
func (m *TxOutputs) XXX_Size() int {
	return xxx_messageInfo_TxOutputs.Size(m)
}
func (m *TxOutputs) XXX_DiscardUnknown() {
	xxx_messageInfo_TxOutputs.DiscardUnknown(m)
}

var xxx_messageInfo_TxOutputs proto.InternalMessageInfo

func (m *TxOutputs) GetTxOutputList() []*TxOutput {
	if m != nil {
		return m.TxOutputList
	}
	return nil
}

// 未花费的交易输出列表
type UTXOs struct {
	UTXOList             []*UTXO  `protobuf:"bytes,1,rep,name=uTXOList,proto3" json:"uTXOList,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UTXOs) Reset()         { *m = UTXOs{} }
func (m *UTXOs) String() string { return proto.CompactTextString(m) }
func (*UTXOs) ProtoMessage()    {}
func (*UTXOs) Descriptor() ([]byte, []int) {
	return fileDescriptor_85c5cd9f6993900d, []int{7}
}

func (m *UTXOs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UTXOs.Unmarshal(m, b)
}
func (m *UTXOs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UTXOs.Marshal(b, m, deterministic)
}
func (m *UTXOs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UTXOs.Merge(m, src)
}
func (m *UTXOs) XXX_Size() int {
	return xxx_messageInfo_UTXOs.Size(m)
}
func (m *UTXOs) XXX_DiscardUnknown() {
	xxx_messageInfo_UTXOs.DiscardUnknown(m)
}

var xxx_messageInfo_UTXOs proto.InternalMessageInfo

func (m *UTXOs) GetUTXOList() []*UTXO {
	if m != nil {
		return m.UTXOList
	}
	return nil
}

// 未花费的交易输出
type UTXO struct {
	Amount               []byte   `protobuf:"bytes,1,opt,name=amount,proto3" json:"amount,omitempty"`
	ToAddr               []byte   `protobuf:"bytes,2,opt,name=toAddr,proto3" json:"toAddr,omitempty"`
	ToPubkey             []byte   `protobuf:"bytes,3,opt,name=toPubkey,proto3" json:"toPubkey,omitempty"`
	RefTxid              []byte   `protobuf:"bytes,4,opt,name=refTxid,proto3" json:"refTxid,omitempty"`
	RefOffset            int32    `protobuf:"varint,5,opt,name=refOffset,proto3" json:"refOffset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UTXO) Reset()         { *m = UTXO{} }
func (m *UTXO) String() string { return proto.CompactTextString(m) }
func (*UTXO) ProtoMessage()    {}
func (*UTXO) Descriptor() ([]byte, []int) {
	return fileDescriptor_85c5cd9f6993900d, []int{8}
}

func (m *UTXO) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UTXO.Unmarshal(m, b)
}
func (m *UTXO) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UTXO.Marshal(b, m, deterministic)
}
func (m *UTXO) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UTXO.Merge(m, src)
}
func (m *UTXO) XXX_Size() int {
	return xxx_messageInfo_UTXO.Size(m)
}
func (m *UTXO) XXX_DiscardUnknown() {
	xxx_messageInfo_UTXO.DiscardUnknown(m)
}

var xxx_messageInfo_UTXO proto.InternalMessageInfo

func (m *UTXO) GetAmount() []byte {
	if m != nil {
		return m.Amount
	}
	return nil
}

func (m *UTXO) GetToAddr() []byte {
	if m != nil {
		return m.ToAddr
	}
	return nil
}

func (m *UTXO) GetToPubkey() []byte {
	if m != nil {
		return m.ToPubkey
	}
	return nil
}

func (m *UTXO) GetRefTxid() []byte {
	if m != nil {
		return m.RefTxid
	}
	return nil
}

func (m *UTXO) GetRefOffset() int32 {
	if m != nil {
		return m.RefOffset
	}
	return 0
}

func init() {
	proto.RegisterEnum("pb.ReturnCode", ReturnCode_name, ReturnCode_value)
	proto.RegisterType((*ECDSAAccount)(nil), "pb.ECDSAAccount")
	proto.RegisterType((*ECDSAInfo)(nil), "pb.ECDSAInfo")
	proto.RegisterType((*ECDSAAccountFromCloud)(nil), "pb.ECDSAAccountFromCloud")
	proto.RegisterType((*ECDSAAccountToCloud)(nil), "pb.ECDSAAccountToCloud")
	proto.RegisterType((*Node)(nil), "pb.Node")
	proto.RegisterType((*TxInputs)(nil), "pb.TxInputs")
	proto.RegisterType((*TxOutputs)(nil), "pb.TxOutputs")
	proto.RegisterType((*UTXOs)(nil), "pb.UTXOs")
	proto.RegisterType((*UTXO)(nil), "pb.UTXO")
}

func init() { proto.RegisterFile("xchain_spv.proto", fileDescriptor_85c5cd9f6993900d) }

var fileDescriptor_85c5cd9f6993900d = []byte{
	// 819 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x54, 0x4f, 0x8f, 0xdb, 0xd4,
	0x17, 0xfd, 0xa5, 0xc9, 0xb8, 0xc9, 0x8d, 0x67, 0xc6, 0xf3, 0xfa, 0x6b, 0x89, 0x46, 0x5d, 0x8c,
	0xac, 0x0a, 0x8d, 0x10, 0x9d, 0x22, 0xd8, 0xc0, 0x82, 0x85, 0xeb, 0xbc, 0xcc, 0x58, 0x4d, 0x9f,
	0xdd, 0xe7, 0x97, 0x36, 0xac, 0x90, 0x13, 0x3b, 0x6d, 0x20, 0xe3, 0x67, 0xd9, 0xcf, 0x25, 0xf9,
	0x02, 0x08, 0x15, 0x90, 0x00, 0x91, 0x05, 0x52, 0xbe, 0x05, 0x7c, 0x05, 0x3e, 0x10, 0xff, 0xff,
	0x2e, 0xd0, 0xf3, 0x73, 0x5c, 0xa7, 0x88, 0x15, 0x1b, 0x76, 0x3e, 0xe7, 0x9e, 0x73, 0xef, 0xf5,
	0xb9, 0x71, 0xc0, 0x58, 0x4e, 0x9f, 0x04, 0xf3, 0xf8, 0xdd, 0x2c, 0x79, 0x7a, 0x96, 0xa4, 0x5c,
	0x70, 0x74, 0x25, 0x99, 0x1c, 0xdf, 0x7c, 0xcc, 0xf9, 0xe3, 0x45, 0x74, 0x27, 0x48, 0xe6, 0x77,
	0x82, 0x38, 0xe6, 0x22, 0x10, 0x73, 0x1e, 0x67, 0x4a, 0x71, 0xac, 0x2b, 0x8f, 0x42, 0xe6, 0x37,
	0x0d, 0xd0, 0xb1, 0xdd, 0xf7, 0x2d, 0x6b, 0x3a, 0xe5, 0x79, 0x2c, 0xd0, 0x09, 0x74, 0xa3, 0x58,
	0xa4, 0x3c, 0x59, 0xdd, 0x5d, 0x89, 0xa8, 0xd7, 0x38, 0x69, 0x9c, 0xea, 0xb4, 0x4e, 0xa1, 0x63,
	0x68, 0x5f, 0xc6, 0xd1, 0x25, 0x8f, 0xe7, 0xd3, 0xde, 0x95, 0x93, 0xc6, 0x69, 0x87, 0x56, 0x18,
	0xbd, 0x0c, 0x07, 0xef, 0x65, 0x3c, 0xf6, 0xd2, 0xf9, 0xd3, 0x40, 0x44, 0xf7, 0xa2, 0x55, 0xaf,
	0x59, 0x28, 0x5e, 0x60, 0xd1, 0x2d, 0xd8, 0x2f, 0x98, 0x7c, 0xb2, 0x98, 0x4f, 0xa5, 0xac, 0x55,
	0xc8, 0x76, 0x49, 0xd4, 0x83, 0xab, 0x41, 0x18, 0xa6, 0x51, 0x96, 0xf5, 0xf6, 0x8a, 0xfa, 0x16,
	0x9a, 0x53, 0xe8, 0x14, 0x5b, 0x3b, 0xf1, 0x8c, 0xff, 0xcb, 0x95, 0x6b, 0x43, 0x9a, 0xbb, 0x43,
	0xbe, 0x6a, 0xc0, 0xf5, 0x7a, 0x36, 0x83, 0x94, 0x5f, 0xda, 0x0b, 0x9e, 0x87, 0x75, 0x4f, 0x63,
	0xc7, 0x83, 0xde, 0x84, 0x97, 0xe4, 0x3b, 0xe0, 0x78, 0x9a, 0xae, 0x12, 0x11, 0x85, 0xb5, 0x24,
	0xd4, 0xe0, 0x7f, 0x2a, 0xa3, 0x57, 0xe1, 0x28, 0xda, 0xd2, 0xf7, 0xb7, 0xcb, 0xaa, 0x8d, 0xfe,
	0x5e, 0x30, 0xbf, 0x6e, 0xc0, 0xb5, 0xfa, 0x6e, 0x8c, 0xff, 0x47, 0x36, 0x93, 0x59, 0x27, 0x41,
	0x96, 0x7d, 0xc0, 0xd3, 0xb0, 0xbc, 0x6a, 0x85, 0xcd, 0x0f, 0x1b, 0xd0, 0x22, 0x3c, 0x8c, 0x10,
	0x82, 0xd6, 0x13, 0x9e, 0x89, 0xf2, 0x56, 0xc5, 0x33, 0x32, 0x41, 0xcf, 0xc5, 0x92, 0x3f, 0xc8,
	0xa3, 0x74, 0x35, 0x4a, 0x17, 0xc5, 0x56, 0x3a, 0xdd, 0xe1, 0xd0, 0x4d, 0xe8, 0x88, 0xa5, 0xc7,
	0x33, 0x21, 0x05, 0xcd, 0x42, 0xf0, 0x9c, 0x40, 0xa7, 0x70, 0x38, 0x09, 0x16, 0x41, 0x3c, 0x8d,
	0xaa, 0x26, 0xad, 0x42, 0xf3, 0x22, 0x6d, 0xbe, 0x05, 0x6d, 0xb6, 0x74, 0xe2, 0x24, 0x17, 0x19,
	0xba, 0x0d, 0x5d, 0xa1, 0x9e, 0x87, 0xf3, 0x62, 0xa5, 0xe6, 0x69, 0xf7, 0xf5, 0xee, 0x59, 0x32,
	0x39, 0x2b, 0x25, 0xb4, 0x5e, 0x37, 0xdf, 0x86, 0x0e, 0x5b, 0xba, 0xb9, 0x28, 0xbc, 0xaf, 0x81,
	0x2e, 0x4a, 0x50, 0x33, 0xeb, 0xca, 0xac, 0x78, 0xba, 0xa3, 0x30, 0x6f, 0xc3, 0xde, 0x88, 0x8d,
	0xdd, 0x0c, 0xdd, 0x82, 0x76, 0xce, 0xc6, 0x6e, 0xcd, 0xd6, 0x96, 0x36, 0x59, 0xa4, 0x55, 0xc5,
	0x7c, 0xd6, 0x80, 0x96, 0xa4, 0xd0, 0x0d, 0xd0, 0x82, 0x4b, 0x79, 0xe9, 0x32, 0xb3, 0x12, 0x49,
	0x5e, 0x70, 0x2b, 0x0c, 0xd3, 0x32, 0xaf, 0x12, 0xc9, 0x33, 0x08, 0xee, 0xe5, 0x93, 0xf7, 0xcb,
	0x6f, 0x50, 0xa7, 0x15, 0x96, 0x3f, 0x92, 0x34, 0x9a, 0xb1, 0xe5, 0x3c, 0x2c, 0xf3, 0xd9, 0x42,
	0x99, 0x6f, 0x1a, 0xcd, 0xdc, 0xd9, 0x2c, 0x8b, 0x44, 0xf1, 0xcd, 0xed, 0xd1, 0xe7, 0xc4, 0x2b,
	0xdf, 0x36, 0x01, 0x68, 0x24, 0xf2, 0x34, 0xb6, 0xe5, 0x11, 0x8f, 0x60, 0x9f, 0x62, 0x36, 0xa2,
	0xc4, 0x1f, 0xd9, 0x36, 0xf6, 0x7d, 0xe3, 0x7f, 0xe8, 0x08, 0xba, 0x0e, 0x61, 0x98, 0x12, 0x6b,
	0x88, 0x29, 0x35, 0x3e, 0x5a, 0x6b, 0x08, 0x81, 0x3e, 0x70, 0x86, 0x98, 0xb8, 0x0c, 0x8f, 0x1d,
	0x9f, 0x19, 0xcf, 0xd6, 0x1a, 0x3a, 0x80, 0xb6, 0x67, 0x51, 0xeb, 0xbe, 0xd4, 0x7c, 0xbc, 0xd6,
	0xd0, 0x75, 0x38, 0xbc, 0x60, 0xcc, 0xa3, 0xf8, 0xc1, 0x08, 0x53, 0x36, 0xb0, 0x9c, 0xa1, 0xf1,
	0xc9, 0x5a, 0x43, 0x37, 0xc0, 0x50, 0xb4, 0xef, 0xb9, 0xc4, 0xc7, 0x05, 0xff, 0xa9, 0x92, 0x5b,
	0xb6, 0xed, 0x8e, 0x08, 0xab, 0xba, 0x7e, 0xb6, 0xd6, 0x90, 0x01, 0xe0, 0x3d, 0xaa, 0x98, 0xcf,
	0xd7, 0x1a, 0xda, 0x87, 0xab, 0xde, 0x23, 0x05, 0xbf, 0x50, 0x63, 0x89, 0xcb, 0x86, 0xee, 0xb9,
	0x43, 0x8c, 0x2f, 0x55, 0x1f, 0xdb, 0x25, 0x04, 0xdb, 0x8c, 0xb8, 0x7d, 0xd5, 0xfe, 0xbb, 0x8d,
	0x86, 0xae, 0xc1, 0xbe, 0x8c, 0x5c, 0x76, 0x22, 0xee, 0xe8, 0xfc, 0xc2, 0xf8, 0x7e, 0xa3, 0xa1,
	0xff, 0xc3, 0x81, 0xd5, 0xef, 0x53, 0xec, 0xfb, 0x0e, 0x79, 0x68, 0x0d, 0x9d, 0xbe, 0xf1, 0xc3,
	0xa6, 0x18, 0x39, 0xc0, 0x78, 0xcb, 0xfc, 0xa8, 0x74, 0x65, 0x4f, 0x8a, 0x07, 0x23, 0x1f, 0xf7,
	0x8d, 0x9f, 0x14, 0x2b, 0x5b, 0x62, 0x62, 0xd3, 0x77, 0x3c, 0x26, 0x5f, 0xfb, 0xe7, 0x8d, 0x8a,
	0x06, 0xe3, 0xed, 0x1c, 0x62, 0xfc, 0xa2, 0x86, 0x17, 0xd1, 0x54, 0x63, 0x7e, 0xdd, 0x68, 0xe8,
	0x10, 0x3a, 0x6c, 0xec, 0x3b, 0xe7, 0x44, 0x3a, 0x7f, 0xdb, 0x68, 0x32, 0x67, 0x8a, 0x3d, 0xd7,
	0x67, 0x6c, 0x2c, 0xa9, 0xdf, 0x37, 0x1a, 0xea, 0x01, 0xba, 0x3b, 0x74, 0xed, 0x7b, 0xf6, 0x85,
	0xe5, 0x90, 0x2a, 0x85, 0x3f, 0x94, 0xdb, 0xc7, 0xf4, 0x21, 0xa6, 0x52, 0xfa, 0xe7, 0x46, 0x9b,
	0x68, 0xc5, 0x7f, 0xff, 0x1b, 0x7f, 0x05, 0x00, 0x00, 0xff, 0xff, 0xfb, 0x3f, 0xda, 0x99, 0x3f,
	0x06, 0x00, 0x00,
}
