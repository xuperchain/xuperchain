// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.7.1
// source: xchain_spv.proto

package pb

import (
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// ReturnCode is the code for client
type ReturnCode int32

const (
	// Operation success
	ReturnCode_RETURNSUCCESS ReturnCode = 0
	// Err about Account
	ReturnCode_INTERNALERR      ReturnCode = 101000
	ReturnCode_FILENOTEXIST     ReturnCode = 101002
	ReturnCode_PARAMERR         ReturnCode = 101003
	ReturnCode_HTTPREQUERTFAIL  ReturnCode = 101004
	ReturnCode_HTTPRESPONSEFAIL ReturnCode = 101005
	ReturnCode_ACCOUNTNOTEXIST  ReturnCode = 101008
	ReturnCode_PWNOTEXIST       ReturnCode = 101009
	ReturnCode_PWEXIST          ReturnCode = 101010
	ReturnCode_NOTLOGIN         ReturnCode = 101012
	// Err about Transaction
	ReturnCode_CONNECTNODEFAIL    ReturnCode = 102001
	ReturnCode_UTXONOTENOUGH      ReturnCode = 102002
	ReturnCode_ADDRESSINVALID     ReturnCode = 102003
	ReturnCode_FEEINVALID         ReturnCode = 102004
	ReturnCode_CONNECTREFUSED     ReturnCode = 102005
	ReturnCode_UTXOENCRYPTERR     ReturnCode = 102006
	ReturnCode_FEENOTENOUGN       ReturnCode = 102007
	ReturnCode_PARAMSINVALID      ReturnCode = 102008
	ReturnCode_TXSIGNERR          ReturnCode = 102009
	ReturnCode_REPOSTTXERR        ReturnCode = 102010
	ReturnCode_BLOCKCHAINNOTEXIST ReturnCode = 102011
	ReturnCode_SERVERERR          ReturnCode = 102012
)

// Enum value maps for ReturnCode.
var (
	ReturnCode_name = map[int32]string{
		0:      "RETURNSUCCESS",
		101000: "INTERNALERR",
		101002: "FILENOTEXIST",
		101003: "PARAMERR",
		101004: "HTTPREQUERTFAIL",
		101005: "HTTPRESPONSEFAIL",
		101008: "ACCOUNTNOTEXIST",
		101009: "PWNOTEXIST",
		101010: "PWEXIST",
		101012: "NOTLOGIN",
		102001: "CONNECTNODEFAIL",
		102002: "UTXONOTENOUGH",
		102003: "ADDRESSINVALID",
		102004: "FEEINVALID",
		102005: "CONNECTREFUSED",
		102006: "UTXOENCRYPTERR",
		102007: "FEENOTENOUGN",
		102008: "PARAMSINVALID",
		102009: "TXSIGNERR",
		102010: "REPOSTTXERR",
		102011: "BLOCKCHAINNOTEXIST",
		102012: "SERVERERR",
	}
	ReturnCode_value = map[string]int32{
		"RETURNSUCCESS":      0,
		"INTERNALERR":        101000,
		"FILENOTEXIST":       101002,
		"PARAMERR":           101003,
		"HTTPREQUERTFAIL":    101004,
		"HTTPRESPONSEFAIL":   101005,
		"ACCOUNTNOTEXIST":    101008,
		"PWNOTEXIST":         101009,
		"PWEXIST":            101010,
		"NOTLOGIN":           101012,
		"CONNECTNODEFAIL":    102001,
		"UTXONOTENOUGH":      102002,
		"ADDRESSINVALID":     102003,
		"FEEINVALID":         102004,
		"CONNECTREFUSED":     102005,
		"UTXOENCRYPTERR":     102006,
		"FEENOTENOUGN":       102007,
		"PARAMSINVALID":      102008,
		"TXSIGNERR":          102009,
		"REPOSTTXERR":        102010,
		"BLOCKCHAINNOTEXIST": 102011,
		"SERVERERR":          102012,
	}
)

func (x ReturnCode) Enum() *ReturnCode {
	p := new(ReturnCode)
	*p = x
	return p
}

func (x ReturnCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReturnCode) Descriptor() protoreflect.EnumDescriptor {
	return file_xchain_spv_proto_enumTypes[0].Descriptor()
}

func (ReturnCode) Type() protoreflect.EnumType {
	return &file_xchain_spv_proto_enumTypes[0]
}

func (x ReturnCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReturnCode.Descriptor instead.
func (ReturnCode) EnumDescriptor() ([]byte, []int) {
	return file_xchain_spv_proto_rawDescGZIP(), []int{0}
}

// 助记词、私钥的json、公钥的json、钱包地址
type ECDSAAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntropyByte    []byte `protobuf:"bytes,1,opt,name=entropyByte,proto3" json:"entropyByte,omitempty"`
	Mnemonic       string `protobuf:"bytes,2,opt,name=mnemonic,proto3" json:"mnemonic,omitempty"`
	JsonPrivateKey string `protobuf:"bytes,3,opt,name=jsonPrivateKey,proto3" json:"jsonPrivateKey,omitempty"`
	JsonPublicKey  string `protobuf:"bytes,4,opt,name=jsonPublicKey,proto3" json:"jsonPublicKey,omitempty"`
	Address        string `protobuf:"bytes,5,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *ECDSAAccount) Reset() {
	*x = ECDSAAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xchain_spv_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ECDSAAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ECDSAAccount) ProtoMessage() {}

func (x *ECDSAAccount) ProtoReflect() protoreflect.Message {
	mi := &file_xchain_spv_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ECDSAAccount.ProtoReflect.Descriptor instead.
func (*ECDSAAccount) Descriptor() ([]byte, []int) {
	return file_xchain_spv_proto_rawDescGZIP(), []int{0}
}

func (x *ECDSAAccount) GetEntropyByte() []byte {
	if x != nil {
		return x.EntropyByte
	}
	return nil
}

func (x *ECDSAAccount) GetMnemonic() string {
	if x != nil {
		return x.Mnemonic
	}
	return ""
}

func (x *ECDSAAccount) GetJsonPrivateKey() string {
	if x != nil {
		return x.JsonPrivateKey
	}
	return ""
}

func (x *ECDSAAccount) GetJsonPublicKey() string {
	if x != nil {
		return x.JsonPublicKey
	}
	return ""
}

func (x *ECDSAAccount) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

// 助记词、随机字节数组、钱包地址
type ECDSAInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntropyByte []byte `protobuf:"bytes,1,opt,name=entropyByte,proto3" json:"entropyByte,omitempty"`
	Mnemonic    string `protobuf:"bytes,2,opt,name=mnemonic,proto3" json:"mnemonic,omitempty"`
	Address     string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *ECDSAInfo) Reset() {
	*x = ECDSAInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xchain_spv_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ECDSAInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ECDSAInfo) ProtoMessage() {}

func (x *ECDSAInfo) ProtoReflect() protoreflect.Message {
	mi := &file_xchain_spv_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ECDSAInfo.ProtoReflect.Descriptor instead.
func (*ECDSAInfo) Descriptor() ([]byte, []int) {
	return file_xchain_spv_proto_rawDescGZIP(), []int{1}
}

func (x *ECDSAInfo) GetEntropyByte() []byte {
	if x != nil {
		return x.EntropyByte
	}
	return nil
}

func (x *ECDSAInfo) GetMnemonic() string {
	if x != nil {
		return x.Mnemonic
	}
	return ""
}

func (x *ECDSAInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

// 钱包地址、被加密后的私钥、被加密后的助记词
type ECDSAAccountFromCloud struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address                 string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	JsonEncryptedPrivateKey string `protobuf:"bytes,2,opt,name=jsonEncryptedPrivateKey,proto3" json:"jsonEncryptedPrivateKey,omitempty"`
	EncryptedMnemonic       string `protobuf:"bytes,3,opt,name=encryptedMnemonic,proto3" json:"encryptedMnemonic,omitempty"`
}

func (x *ECDSAAccountFromCloud) Reset() {
	*x = ECDSAAccountFromCloud{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xchain_spv_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ECDSAAccountFromCloud) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ECDSAAccountFromCloud) ProtoMessage() {}

func (x *ECDSAAccountFromCloud) ProtoReflect() protoreflect.Message {
	mi := &file_xchain_spv_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ECDSAAccountFromCloud.ProtoReflect.Descriptor instead.
func (*ECDSAAccountFromCloud) Descriptor() ([]byte, []int) {
	return file_xchain_spv_proto_rawDescGZIP(), []int{2}
}

func (x *ECDSAAccountFromCloud) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *ECDSAAccountFromCloud) GetJsonEncryptedPrivateKey() string {
	if x != nil {
		return x.JsonEncryptedPrivateKey
	}
	return ""
}

func (x *ECDSAAccountFromCloud) GetEncryptedMnemonic() string {
	if x != nil {
		return x.EncryptedMnemonic
	}
	return ""
}

// 钱包地址、被加密后的私钥、被加密后的助记词、支付密码的明文
type ECDSAAccountToCloud struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address                 string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	JsonEncryptedPrivateKey string `protobuf:"bytes,2,opt,name=jsonEncryptedPrivateKey,proto3" json:"jsonEncryptedPrivateKey,omitempty"`
	EncryptedMnemonic       string `protobuf:"bytes,3,opt,name=encryptedMnemonic,proto3" json:"encryptedMnemonic,omitempty"`
	Password                string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *ECDSAAccountToCloud) Reset() {
	*x = ECDSAAccountToCloud{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xchain_spv_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ECDSAAccountToCloud) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ECDSAAccountToCloud) ProtoMessage() {}

func (x *ECDSAAccountToCloud) ProtoReflect() protoreflect.Message {
	mi := &file_xchain_spv_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ECDSAAccountToCloud.ProtoReflect.Descriptor instead.
func (*ECDSAAccountToCloud) Descriptor() ([]byte, []int) {
	return file_xchain_spv_proto_rawDescGZIP(), []int{3}
}

func (x *ECDSAAccountToCloud) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *ECDSAAccountToCloud) GetJsonEncryptedPrivateKey() string {
	if x != nil {
		return x.JsonEncryptedPrivateKey
	}
	return ""
}

func (x *ECDSAAccountToCloud) GetEncryptedMnemonic() string {
	if x != nil {
		return x.EncryptedMnemonic
	}
	return ""
}

func (x *ECDSAAccountToCloud) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

// 全节点
type Node struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host            []byte `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	UtxoQueryUrl    []byte `protobuf:"bytes,2,opt,name=utxoQueryUrl,proto3" json:"utxoQueryUrl,omitempty"`
	TxPostUrl       []byte `protobuf:"bytes,3,opt,name=txPostUrl,proto3" json:"txPostUrl,omitempty"`
	BalanceQueryUrl []byte `protobuf:"bytes,4,opt,name=balanceQueryUrl,proto3" json:"balanceQueryUrl,omitempty"`
}

func (x *Node) Reset() {
	*x = Node{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xchain_spv_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_xchain_spv_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_xchain_spv_proto_rawDescGZIP(), []int{4}
}

func (x *Node) GetHost() []byte {
	if x != nil {
		return x.Host
	}
	return nil
}

func (x *Node) GetUtxoQueryUrl() []byte {
	if x != nil {
		return x.UtxoQueryUrl
	}
	return nil
}

func (x *Node) GetTxPostUrl() []byte {
	if x != nil {
		return x.TxPostUrl
	}
	return nil
}

func (x *Node) GetBalanceQueryUrl() []byte {
	if x != nil {
		return x.BalanceQueryUrl
	}
	return nil
}

// 交易输入列表
type TxInputs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxInputList []*TxInput `protobuf:"bytes,1,rep,name=txInputList,proto3" json:"txInputList,omitempty"`
}

func (x *TxInputs) Reset() {
	*x = TxInputs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xchain_spv_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxInputs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxInputs) ProtoMessage() {}

func (x *TxInputs) ProtoReflect() protoreflect.Message {
	mi := &file_xchain_spv_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxInputs.ProtoReflect.Descriptor instead.
func (*TxInputs) Descriptor() ([]byte, []int) {
	return file_xchain_spv_proto_rawDescGZIP(), []int{5}
}

func (x *TxInputs) GetTxInputList() []*TxInput {
	if x != nil {
		return x.TxInputList
	}
	return nil
}

// 交易输出列表
type TxOutputs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxOutputList []*TxOutput `protobuf:"bytes,1,rep,name=txOutputList,proto3" json:"txOutputList,omitempty"`
}

func (x *TxOutputs) Reset() {
	*x = TxOutputs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xchain_spv_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxOutputs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxOutputs) ProtoMessage() {}

func (x *TxOutputs) ProtoReflect() protoreflect.Message {
	mi := &file_xchain_spv_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxOutputs.ProtoReflect.Descriptor instead.
func (*TxOutputs) Descriptor() ([]byte, []int) {
	return file_xchain_spv_proto_rawDescGZIP(), []int{6}
}

func (x *TxOutputs) GetTxOutputList() []*TxOutput {
	if x != nil {
		return x.TxOutputList
	}
	return nil
}

// 未花费的交易输出列表
type UTXOs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UTXOList []*UTXO `protobuf:"bytes,1,rep,name=uTXOList,proto3" json:"uTXOList,omitempty"`
}

func (x *UTXOs) Reset() {
	*x = UTXOs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xchain_spv_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UTXOs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UTXOs) ProtoMessage() {}

func (x *UTXOs) ProtoReflect() protoreflect.Message {
	mi := &file_xchain_spv_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UTXOs.ProtoReflect.Descriptor instead.
func (*UTXOs) Descriptor() ([]byte, []int) {
	return file_xchain_spv_proto_rawDescGZIP(), []int{7}
}

func (x *UTXOs) GetUTXOList() []*UTXO {
	if x != nil {
		return x.UTXOList
	}
	return nil
}

// 未花费的交易输出
type UTXO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount    []byte `protobuf:"bytes,1,opt,name=amount,proto3" json:"amount,omitempty"`
	ToAddr    []byte `protobuf:"bytes,2,opt,name=toAddr,proto3" json:"toAddr,omitempty"`
	ToPubkey  []byte `protobuf:"bytes,3,opt,name=toPubkey,proto3" json:"toPubkey,omitempty"`
	RefTxid   []byte `protobuf:"bytes,4,opt,name=refTxid,proto3" json:"refTxid,omitempty"`
	RefOffset int32  `protobuf:"varint,5,opt,name=refOffset,proto3" json:"refOffset,omitempty"`
}

func (x *UTXO) Reset() {
	*x = UTXO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xchain_spv_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UTXO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UTXO) ProtoMessage() {}

func (x *UTXO) ProtoReflect() protoreflect.Message {
	mi := &file_xchain_spv_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UTXO.ProtoReflect.Descriptor instead.
func (*UTXO) Descriptor() ([]byte, []int) {
	return file_xchain_spv_proto_rawDescGZIP(), []int{8}
}

func (x *UTXO) GetAmount() []byte {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *UTXO) GetToAddr() []byte {
	if x != nil {
		return x.ToAddr
	}
	return nil
}

func (x *UTXO) GetToPubkey() []byte {
	if x != nil {
		return x.ToPubkey
	}
	return nil
}

func (x *UTXO) GetRefTxid() []byte {
	if x != nil {
		return x.RefTxid
	}
	return nil
}

func (x *UTXO) GetRefOffset() int32 {
	if x != nil {
		return x.RefOffset
	}
	return 0
}

var File_xchain_spv_proto protoreflect.FileDescriptor

var file_xchain_spv_proto_rawDesc = []byte{
	0x0a, 0x10, 0x78, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x73, 0x70, 0x76, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x78, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xb4, 0x01, 0x0a, 0x0c, 0x45, 0x43, 0x44, 0x53, 0x41, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x6e, 0x74, 0x72, 0x6f, 0x70, 0x79, 0x42, 0x79,
	0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x65, 0x6e, 0x74, 0x72, 0x6f, 0x70,
	0x79, 0x42, 0x79, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69,
	0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69,
	0x63, 0x12, 0x26, 0x0a, 0x0e, 0x6a, 0x73, 0x6f, 0x6e, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6a, 0x73, 0x6f, 0x6e, 0x50,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x6a, 0x73, 0x6f,
	0x6e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x6a, 0x73, 0x6f, 0x6e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x63, 0x0a, 0x09, 0x45, 0x43, 0x44,
	0x53, 0x41, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x6e, 0x74, 0x72, 0x6f, 0x70,
	0x79, 0x42, 0x79, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x65, 0x6e, 0x74,
	0x72, 0x6f, 0x70, 0x79, 0x42, 0x79, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x6e, 0x65, 0x6d,
	0x6f, 0x6e, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x6e, 0x65, 0x6d,
	0x6f, 0x6e, 0x69, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x99,
	0x01, 0x0a, 0x15, 0x45, 0x43, 0x44, 0x53, 0x41, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x46,
	0x72, 0x6f, 0x6d, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x38, 0x0a, 0x17, 0x6a, 0x73, 0x6f, 0x6e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x65, 0x64, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x17, 0x6a, 0x73, 0x6f, 0x6e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x65, 0x64, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x11,
	0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69,
	0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x65, 0x64, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x22, 0xb3, 0x01, 0x0a, 0x13, 0x45,
	0x43, 0x44, 0x53, 0x41, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x6f, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x38, 0x0a, 0x17,
	0x6a, 0x73, 0x6f, 0x6e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x50, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x6a,
	0x73, 0x6f, 0x6e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x50, 0x72, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x11, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x65, 0x64, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x11, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x4d, 0x6e, 0x65, 0x6d,
	0x6f, 0x6e, 0x69, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x22, 0x86, 0x01, 0x0a, 0x04, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x22, 0x0a,
	0x0c, 0x75, 0x74, 0x78, 0x6f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55, 0x72, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0c, 0x75, 0x74, 0x78, 0x6f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55, 0x72,
	0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x78, 0x50, 0x6f, 0x73, 0x74, 0x55, 0x72, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x74, 0x78, 0x50, 0x6f, 0x73, 0x74, 0x55, 0x72, 0x6c, 0x12,
	0x28, 0x0a, 0x0f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55,
	0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55, 0x72, 0x6c, 0x22, 0x39, 0x0a, 0x08, 0x54, 0x78, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x73, 0x12, 0x2d, 0x0a, 0x0b, 0x74, 0x78, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e,
	0x54, 0x78, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x0b, 0x74, 0x78, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0x3d, 0x0a, 0x09, 0x54, 0x78, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x73, 0x12, 0x30, 0x0a, 0x0c, 0x74, 0x78, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x78, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x0c, 0x74, 0x78, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0x2d, 0x0a, 0x05, 0x55, 0x54, 0x58, 0x4f, 0x73, 0x12, 0x24, 0x0a, 0x08,
	0x75, 0x54, 0x58, 0x4f, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08,
	0x2e, 0x70, 0x62, 0x2e, 0x55, 0x54, 0x58, 0x4f, 0x52, 0x08, 0x75, 0x54, 0x58, 0x4f, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0x8a, 0x01, 0x0a, 0x04, 0x55, 0x54, 0x58, 0x4f, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x06, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x74,
	0x6f, 0x50, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x74,
	0x6f, 0x50, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x66, 0x54, 0x78,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x72, 0x65, 0x66, 0x54, 0x78, 0x69,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x66, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x72, 0x65, 0x66, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x2a,
	0xc5, 0x03, 0x0a, 0x0a, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x11,
	0x0a, 0x0d, 0x52, 0x45, 0x54, 0x55, 0x52, 0x4e, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10,
	0x00, 0x12, 0x11, 0x0a, 0x0b, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x45, 0x52, 0x52,
	0x10, 0x88, 0x95, 0x06, 0x12, 0x12, 0x0a, 0x0c, 0x46, 0x49, 0x4c, 0x45, 0x4e, 0x4f, 0x54, 0x45,
	0x58, 0x49, 0x53, 0x54, 0x10, 0x8a, 0x95, 0x06, 0x12, 0x0e, 0x0a, 0x08, 0x50, 0x41, 0x52, 0x41,
	0x4d, 0x45, 0x52, 0x52, 0x10, 0x8b, 0x95, 0x06, 0x12, 0x15, 0x0a, 0x0f, 0x48, 0x54, 0x54, 0x50,
	0x52, 0x45, 0x51, 0x55, 0x45, 0x52, 0x54, 0x46, 0x41, 0x49, 0x4c, 0x10, 0x8c, 0x95, 0x06, 0x12,
	0x16, 0x0a, 0x10, 0x48, 0x54, 0x54, 0x50, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x46,
	0x41, 0x49, 0x4c, 0x10, 0x8d, 0x95, 0x06, 0x12, 0x15, 0x0a, 0x0f, 0x41, 0x43, 0x43, 0x4f, 0x55,
	0x4e, 0x54, 0x4e, 0x4f, 0x54, 0x45, 0x58, 0x49, 0x53, 0x54, 0x10, 0x90, 0x95, 0x06, 0x12, 0x10,
	0x0a, 0x0a, 0x50, 0x57, 0x4e, 0x4f, 0x54, 0x45, 0x58, 0x49, 0x53, 0x54, 0x10, 0x91, 0x95, 0x06,
	0x12, 0x0d, 0x0a, 0x07, 0x50, 0x57, 0x45, 0x58, 0x49, 0x53, 0x54, 0x10, 0x92, 0x95, 0x06, 0x12,
	0x0e, 0x0a, 0x08, 0x4e, 0x4f, 0x54, 0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x10, 0x94, 0x95, 0x06, 0x12,
	0x15, 0x0a, 0x0f, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x4e, 0x4f, 0x44, 0x45, 0x46, 0x41,
	0x49, 0x4c, 0x10, 0xf1, 0x9c, 0x06, 0x12, 0x13, 0x0a, 0x0d, 0x55, 0x54, 0x58, 0x4f, 0x4e, 0x4f,
	0x54, 0x45, 0x4e, 0x4f, 0x55, 0x47, 0x48, 0x10, 0xf2, 0x9c, 0x06, 0x12, 0x14, 0x0a, 0x0e, 0x41,
	0x44, 0x44, 0x52, 0x45, 0x53, 0x53, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0xf3, 0x9c,
	0x06, 0x12, 0x10, 0x0a, 0x0a, 0x46, 0x45, 0x45, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10,
	0xf4, 0x9c, 0x06, 0x12, 0x14, 0x0a, 0x0e, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x52, 0x45,
	0x46, 0x55, 0x53, 0x45, 0x44, 0x10, 0xf5, 0x9c, 0x06, 0x12, 0x14, 0x0a, 0x0e, 0x55, 0x54, 0x58,
	0x4f, 0x45, 0x4e, 0x43, 0x52, 0x59, 0x50, 0x54, 0x45, 0x52, 0x52, 0x10, 0xf6, 0x9c, 0x06, 0x12,
	0x12, 0x0a, 0x0c, 0x46, 0x45, 0x45, 0x4e, 0x4f, 0x54, 0x45, 0x4e, 0x4f, 0x55, 0x47, 0x4e, 0x10,
	0xf7, 0x9c, 0x06, 0x12, 0x13, 0x0a, 0x0d, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x53, 0x49, 0x4e, 0x56,
	0x41, 0x4c, 0x49, 0x44, 0x10, 0xf8, 0x9c, 0x06, 0x12, 0x0f, 0x0a, 0x09, 0x54, 0x58, 0x53, 0x49,
	0x47, 0x4e, 0x45, 0x52, 0x52, 0x10, 0xf9, 0x9c, 0x06, 0x12, 0x11, 0x0a, 0x0b, 0x52, 0x45, 0x50,
	0x4f, 0x53, 0x54, 0x54, 0x58, 0x45, 0x52, 0x52, 0x10, 0xfa, 0x9c, 0x06, 0x12, 0x18, 0x0a, 0x12,
	0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x43, 0x48, 0x41, 0x49, 0x4e, 0x4e, 0x4f, 0x54, 0x45, 0x58, 0x49,
	0x53, 0x54, 0x10, 0xfb, 0x9c, 0x06, 0x12, 0x0f, 0x0a, 0x09, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52,
	0x45, 0x52, 0x52, 0x10, 0xfc, 0x9c, 0x06, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_xchain_spv_proto_rawDescOnce sync.Once
	file_xchain_spv_proto_rawDescData = file_xchain_spv_proto_rawDesc
)

func file_xchain_spv_proto_rawDescGZIP() []byte {
	file_xchain_spv_proto_rawDescOnce.Do(func() {
		file_xchain_spv_proto_rawDescData = protoimpl.X.CompressGZIP(file_xchain_spv_proto_rawDescData)
	})
	return file_xchain_spv_proto_rawDescData
}

var file_xchain_spv_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_xchain_spv_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_xchain_spv_proto_goTypes = []interface{}{
	(ReturnCode)(0),               // 0: pb.ReturnCode
	(*ECDSAAccount)(nil),          // 1: pb.ECDSAAccount
	(*ECDSAInfo)(nil),             // 2: pb.ECDSAInfo
	(*ECDSAAccountFromCloud)(nil), // 3: pb.ECDSAAccountFromCloud
	(*ECDSAAccountToCloud)(nil),   // 4: pb.ECDSAAccountToCloud
	(*Node)(nil),                  // 5: pb.Node
	(*TxInputs)(nil),              // 6: pb.TxInputs
	(*TxOutputs)(nil),             // 7: pb.TxOutputs
	(*UTXOs)(nil),                 // 8: pb.UTXOs
	(*UTXO)(nil),                  // 9: pb.UTXO
	(*TxInput)(nil),               // 10: pb.TxInput
	(*TxOutput)(nil),              // 11: pb.TxOutput
}
var file_xchain_spv_proto_depIdxs = []int32{
	10, // 0: pb.TxInputs.txInputList:type_name -> pb.TxInput
	11, // 1: pb.TxOutputs.txOutputList:type_name -> pb.TxOutput
	9,  // 2: pb.UTXOs.uTXOList:type_name -> pb.UTXO
	3,  // [3:3] is the sub-list for method output_type
	3,  // [3:3] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_xchain_spv_proto_init() }
func file_xchain_spv_proto_init() {
	if File_xchain_spv_proto != nil {
		return
	}
	file_xchain_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_xchain_spv_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ECDSAAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xchain_spv_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ECDSAInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xchain_spv_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ECDSAAccountFromCloud); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xchain_spv_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ECDSAAccountToCloud); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xchain_spv_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Node); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xchain_spv_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxInputs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xchain_spv_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxOutputs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xchain_spv_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UTXOs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xchain_spv_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UTXO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_xchain_spv_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_xchain_spv_proto_goTypes,
		DependencyIndexes: file_xchain_spv_proto_depIdxs,
		EnumInfos:         file_xchain_spv_proto_enumTypes,
		MessageInfos:      file_xchain_spv_proto_msgTypes,
	}.Build()
	File_xchain_spv_proto = out.File
	file_xchain_spv_proto_rawDesc = nil
	file_xchain_spv_proto_goTypes = nil
	file_xchain_spv_proto_depIdxs = nil
}
