// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.7.1
// source: chainedbft.proto

package pb

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// QCState is the phase of hotstuff
type QCState int32

const (
	QCState_NEW_VIEW   QCState = 0
	QCState_PREPARE    QCState = 1
	QCState_PRE_COMMIT QCState = 2
	QCState_COMMIT     QCState = 3
	QCState_DECIDE     QCState = 4
)

// Enum value maps for QCState.
var (
	QCState_name = map[int32]string{
		0: "NEW_VIEW",
		1: "PREPARE",
		2: "PRE_COMMIT",
		3: "COMMIT",
		4: "DECIDE",
	}
	QCState_value = map[string]int32{
		"NEW_VIEW":   0,
		"PREPARE":    1,
		"PRE_COMMIT": 2,
		"COMMIT":     3,
		"DECIDE":     4,
	}
)

func (x QCState) Enum() *QCState {
	p := new(QCState)
	*p = x
	return p
}

func (x QCState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QCState) Descriptor() protoreflect.EnumDescriptor {
	return file_chainedbft_proto_enumTypes[0].Descriptor()
}

func (QCState) Type() protoreflect.EnumType {
	return &file_chainedbft_proto_enumTypes[0]
}

func (x QCState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QCState.Descriptor instead.
func (QCState) EnumDescriptor() ([]byte, []int) {
	return file_chainedbft_proto_rawDescGZIP(), []int{0}
}

// QuorumCert is a data type that combines a collection of signatures from replicas.
type QuorumCert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The id of Proposal this QC certified.
	ProposalId []byte `protobuf:"bytes,1,opt,name=ProposalId,proto3" json:"ProposalId,omitempty"`
	// The msg of Proposal this QC certified.
	ProposalMsg []byte `protobuf:"bytes,2,opt,name=ProposalMsg,proto3" json:"ProposalMsg,omitempty"`
	// The current type of this QC certified.
	// the type contains `NEW_VIEW`, `PREPARE`
	Type QCState `protobuf:"varint,3,opt,name=Type,proto3,enum=pb.QCState" json:"Type,omitempty"`
	// The view number of this QC certified.
	ViewNumber int64 `protobuf:"varint,4,opt,name=ViewNumber,proto3" json:"ViewNumber,omitempty"`
	// SignInfos is the signs of the leader gathered from replicas
	// of a specifically certType.
	SignInfos *QCSignInfos `protobuf:"bytes,5,opt,name=SignInfos,proto3" json:"SignInfos,omitempty"`
}

func (x *QuorumCert) Reset() {
	*x = QuorumCert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chainedbft_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuorumCert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuorumCert) ProtoMessage() {}

func (x *QuorumCert) ProtoReflect() protoreflect.Message {
	mi := &file_chainedbft_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuorumCert.ProtoReflect.Descriptor instead.
func (*QuorumCert) Descriptor() ([]byte, []int) {
	return file_chainedbft_proto_rawDescGZIP(), []int{0}
}

func (x *QuorumCert) GetProposalId() []byte {
	if x != nil {
		return x.ProposalId
	}
	return nil
}

func (x *QuorumCert) GetProposalMsg() []byte {
	if x != nil {
		return x.ProposalMsg
	}
	return nil
}

func (x *QuorumCert) GetType() QCState {
	if x != nil {
		return x.Type
	}
	return QCState_NEW_VIEW
}

func (x *QuorumCert) GetViewNumber() int64 {
	if x != nil {
		return x.ViewNumber
	}
	return 0
}

func (x *QuorumCert) GetSignInfos() *QCSignInfos {
	if x != nil {
		return x.SignInfos
	}
	return nil
}

// QCSignInfos is the signs of the leader gathered from replicas of a specifically certType.
// A slice of signs is used at present.
// TODO @qizheng09: It will be change to Threshold-Signatures after
// Crypto lib support Threshold-Signatures.
type QCSignInfos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// QCSignInfos
	QCSignInfos []*SignInfo `protobuf:"bytes,1,rep,name=QCSignInfos,proto3" json:"QCSignInfos,omitempty"`
}

func (x *QCSignInfos) Reset() {
	*x = QCSignInfos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chainedbft_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QCSignInfos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QCSignInfos) ProtoMessage() {}

func (x *QCSignInfos) ProtoReflect() protoreflect.Message {
	mi := &file_chainedbft_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QCSignInfos.ProtoReflect.Descriptor instead.
func (*QCSignInfos) Descriptor() ([]byte, []int) {
	return file_chainedbft_proto_rawDescGZIP(), []int{1}
}

func (x *QCSignInfos) GetQCSignInfos() []*SignInfo {
	if x != nil {
		return x.QCSignInfos
	}
	return nil
}

// SignInfo is the signature information of the
type SignInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address   string `protobuf:"bytes,1,opt,name=Address,proto3" json:"Address,omitempty"`
	PublicKey string `protobuf:"bytes,2,opt,name=PublicKey,proto3" json:"PublicKey,omitempty"`
	Sign      []byte `protobuf:"bytes,3,opt,name=Sign,proto3" json:"Sign,omitempty"`
}

func (x *SignInfo) Reset() {
	*x = SignInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chainedbft_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignInfo) ProtoMessage() {}

func (x *SignInfo) ProtoReflect() protoreflect.Message {
	mi := &file_chainedbft_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignInfo.ProtoReflect.Descriptor instead.
func (*SignInfo) Descriptor() ([]byte, []int) {
	return file_chainedbft_proto_rawDescGZIP(), []int{2}
}

func (x *SignInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *SignInfo) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *SignInfo) GetSign() []byte {
	if x != nil {
		return x.Sign
	}
	return nil
}

// ChainedBftPhaseMessage is the proposal message of the protocal.
// In Hotstuff, there are two kinds of messages, "NEW_VIEW_MESSAGE" and "QC_Message".
// A stable leader can skip this "NEW_VIEW_MESSAGE".
type ChainedBftPhaseMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Message Type: NEW_VIEW_MESSAGE or QC_MESSAGE
	Type QCState `protobuf:"varint,1,opt,name=Type,proto3,enum=pb.QCState" json:"Type,omitempty"`
	// ViewNumber the current view number
	ViewNumber int64 `protobuf:"varint,2,opt,name=ViewNumber,proto3" json:"ViewNumber,omitempty"`
	// The new proposal send to other replicas while the
	ProposalQC *QuorumCert `protobuf:"bytes,3,opt,name=ProposalQC,proto3" json:"ProposalQC,omitempty"`
	// JustifyQC is the QC of the leader gathered, send to next leader, while the message type is "NEW_VIEW_MESSAGE"
	JustifyQC *QuorumCert `protobuf:"bytes,4,opt,name=JustifyQC,proto3" json:"JustifyQC,omitempty"`
	// MsgDigest is the digest of the msgg
	MsgDigest []byte `protobuf:"bytes,5,opt,name=MsgDigest,proto3" json:"MsgDigest,omitempty"`
	// Signature for this msg
	Signature *SignInfo `protobuf:"bytes,6,opt,name=Signature,proto3" json:"Signature,omitempty"`
}

func (x *ChainedBftPhaseMessage) Reset() {
	*x = ChainedBftPhaseMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chainedbft_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChainedBftPhaseMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChainedBftPhaseMessage) ProtoMessage() {}

func (x *ChainedBftPhaseMessage) ProtoReflect() protoreflect.Message {
	mi := &file_chainedbft_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChainedBftPhaseMessage.ProtoReflect.Descriptor instead.
func (*ChainedBftPhaseMessage) Descriptor() ([]byte, []int) {
	return file_chainedbft_proto_rawDescGZIP(), []int{3}
}

func (x *ChainedBftPhaseMessage) GetType() QCState {
	if x != nil {
		return x.Type
	}
	return QCState_NEW_VIEW
}

func (x *ChainedBftPhaseMessage) GetViewNumber() int64 {
	if x != nil {
		return x.ViewNumber
	}
	return 0
}

func (x *ChainedBftPhaseMessage) GetProposalQC() *QuorumCert {
	if x != nil {
		return x.ProposalQC
	}
	return nil
}

func (x *ChainedBftPhaseMessage) GetJustifyQC() *QuorumCert {
	if x != nil {
		return x.JustifyQC
	}
	return nil
}

func (x *ChainedBftPhaseMessage) GetMsgDigest() []byte {
	if x != nil {
		return x.MsgDigest
	}
	return nil
}

func (x *ChainedBftPhaseMessage) GetSignature() *SignInfo {
	if x != nil {
		return x.Signature
	}
	return nil
}

// ChainedBftVoteMessage is the vote message of the protocal.
type ChainedBftVoteMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The id of this message votes for.
	ProposalId []byte `protobuf:"bytes,1,opt,name=ProposalId,proto3" json:"ProposalId,omitempty"`
	// Replica will sign the QCMessage if the QuorumCert if valid.
	Signature *SignInfo `protobuf:"bytes,2,opt,name=Signature,proto3" json:"Signature,omitempty"`
}

func (x *ChainedBftVoteMessage) Reset() {
	*x = ChainedBftVoteMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chainedbft_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChainedBftVoteMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChainedBftVoteMessage) ProtoMessage() {}

func (x *ChainedBftVoteMessage) ProtoReflect() protoreflect.Message {
	mi := &file_chainedbft_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChainedBftVoteMessage.ProtoReflect.Descriptor instead.
func (*ChainedBftVoteMessage) Descriptor() ([]byte, []int) {
	return file_chainedbft_proto_rawDescGZIP(), []int{4}
}

func (x *ChainedBftVoteMessage) GetProposalId() []byte {
	if x != nil {
		return x.ProposalId
	}
	return nil
}

func (x *ChainedBftVoteMessage) GetSignature() *SignInfo {
	if x != nil {
		return x.Signature
	}
	return nil
}

var File_chainedbft_proto protoreflect.FileDescriptor

var file_chainedbft_proto_rawDesc = []byte{
	0x0a, 0x10, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x62, 0x66, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x22, 0xbe, 0x01, 0x0a, 0x0a, 0x51, 0x75, 0x6f, 0x72, 0x75,
	0x6d, 0x43, 0x65, 0x72, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61,
	0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x50, 0x72, 0x6f, 0x70, 0x6f,
	0x73, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61,
	0x6c, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x50, 0x72, 0x6f, 0x70,
	0x6f, 0x73, 0x61, 0x6c, 0x4d, 0x73, 0x67, 0x12, 0x1f, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x51, 0x43, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x56, 0x69, 0x65, 0x77,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x56, 0x69,
	0x65, 0x77, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2d, 0x0a, 0x09, 0x53, 0x69, 0x67, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62,
	0x2e, 0x51, 0x43, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x52, 0x09, 0x53, 0x69,
	0x67, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x3d, 0x0a, 0x0b, 0x51, 0x43, 0x53, 0x69, 0x67,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x2e, 0x0a, 0x0b, 0x51, 0x43, 0x53, 0x69, 0x67, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62,
	0x2e, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x51, 0x43, 0x53, 0x69, 0x67,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x56, 0x0a, 0x08, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x69,
	0x67, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x53, 0x69, 0x67, 0x6e, 0x22, 0x81,
	0x02, 0x0a, 0x16, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x42, 0x66, 0x74, 0x50, 0x68, 0x61,
	0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x04, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x51, 0x43, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x56, 0x69,
	0x65, 0x77, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x56, 0x69, 0x65, 0x77, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x0a, 0x50, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x51, 0x43, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x70, 0x62, 0x2e, 0x51, 0x75, 0x6f, 0x72, 0x75, 0x6d, 0x43, 0x65, 0x72, 0x74, 0x52, 0x0a,
	0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x51, 0x43, 0x12, 0x2c, 0x0a, 0x09, 0x4a, 0x75,
	0x73, 0x74, 0x69, 0x66, 0x79, 0x51, 0x43, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x70, 0x62, 0x2e, 0x51, 0x75, 0x6f, 0x72, 0x75, 0x6d, 0x43, 0x65, 0x72, 0x74, 0x52, 0x09, 0x4a,
	0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x51, 0x43, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x73, 0x67, 0x44,
	0x69, 0x67, 0x65, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x4d, 0x73, 0x67,
	0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x09, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x53,
	0x69, 0x67, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x22, 0x63, 0x0a, 0x15, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x42, 0x66, 0x74,
	0x56, 0x6f, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x50,
	0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0a, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x09, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x70, 0x62, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2a, 0x4c, 0x0a, 0x07, 0x51, 0x43, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x4e, 0x45, 0x57, 0x5f, 0x56, 0x49, 0x45, 0x57, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x07, 0x50, 0x52, 0x45, 0x50, 0x41, 0x52, 0x45, 0x10, 0x01, 0x12, 0x0e, 0x0a,
	0x0a, 0x50, 0x52, 0x45, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x49, 0x54, 0x10, 0x02, 0x12, 0x0a, 0x0a,
	0x06, 0x43, 0x4f, 0x4d, 0x4d, 0x49, 0x54, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x45, 0x43,
	0x49, 0x44, 0x45, 0x10, 0x04, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_chainedbft_proto_rawDescOnce sync.Once
	file_chainedbft_proto_rawDescData = file_chainedbft_proto_rawDesc
)

func file_chainedbft_proto_rawDescGZIP() []byte {
	file_chainedbft_proto_rawDescOnce.Do(func() {
		file_chainedbft_proto_rawDescData = protoimpl.X.CompressGZIP(file_chainedbft_proto_rawDescData)
	})
	return file_chainedbft_proto_rawDescData
}

var file_chainedbft_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_chainedbft_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_chainedbft_proto_goTypes = []interface{}{
	(QCState)(0),                   // 0: pb.QCState
	(*QuorumCert)(nil),             // 1: pb.QuorumCert
	(*QCSignInfos)(nil),            // 2: pb.QCSignInfos
	(*SignInfo)(nil),               // 3: pb.SignInfo
	(*ChainedBftPhaseMessage)(nil), // 4: pb.ChainedBftPhaseMessage
	(*ChainedBftVoteMessage)(nil),  // 5: pb.ChainedBftVoteMessage
}
var file_chainedbft_proto_depIdxs = []int32{
	0, // 0: pb.QuorumCert.Type:type_name -> pb.QCState
	2, // 1: pb.QuorumCert.SignInfos:type_name -> pb.QCSignInfos
	3, // 2: pb.QCSignInfos.QCSignInfos:type_name -> pb.SignInfo
	0, // 3: pb.ChainedBftPhaseMessage.Type:type_name -> pb.QCState
	1, // 4: pb.ChainedBftPhaseMessage.ProposalQC:type_name -> pb.QuorumCert
	1, // 5: pb.ChainedBftPhaseMessage.JustifyQC:type_name -> pb.QuorumCert
	3, // 6: pb.ChainedBftPhaseMessage.Signature:type_name -> pb.SignInfo
	3, // 7: pb.ChainedBftVoteMessage.Signature:type_name -> pb.SignInfo
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_chainedbft_proto_init() }
func file_chainedbft_proto_init() {
	if File_chainedbft_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_chainedbft_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuorumCert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chainedbft_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QCSignInfos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chainedbft_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chainedbft_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChainedBftPhaseMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chainedbft_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChainedBftVoteMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_chainedbft_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_chainedbft_proto_goTypes,
		DependencyIndexes: file_chainedbft_proto_depIdxs,
		EnumInfos:         file_chainedbft_proto_enumTypes,
		MessageInfos:      file_chainedbft_proto_msgTypes,
	}.Build()
	File_chainedbft_proto = out.File
	file_chainedbft_proto_rawDesc = nil
	file_chainedbft_proto_goTypes = nil
	file_chainedbft_proto_depIdxs = nil
}
