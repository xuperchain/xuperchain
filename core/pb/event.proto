syntax = "proto3";

package pb;

import "xchain.proto";

// rpc api
service PubsubService {
  rpc Subscribe (EventRequest) returns (stream Event);
  rpc Unsubscribe (UnsubscribeRequest) returns (UnsubscribeResponse);
}

// BlockStatus block status
enum BlockStatus {
  ERROR = 0;
  TRUNK = 1;
  BRANCH = 2;
  NONEXIST = 3;
}

///// EventType 事件类型
enum EventType {
  UNDEFINED = 0;
  BLOCK = 1;
  TRANSACTION = 2;
  ACCOUNT = 3;
  SUBSCRIBE_RESPONSE = 4;
}

// BlockStatusInfo 区块元数据
message BlockStatusInfo {
  string bcname = 1;
  BlockStatus status = 2;
}

message TransactionStatusInfo {
  string bcname = 1;
  string initiator = 2;
  TransactionStatus status = 3;
}

message AccountStatusInfo {
  string bcname = 1;
  TransactionStatus status = 2;
}

enum UnsubscribeStatusInfo {
  UNSUBSCRIBE_UNDEFINED = 0;
  UNSUBSCRIBE_SUCCESS = 1;
  UNSUBSCRIBE_FAILED = 2;
}

/////// 事件订阅请求数据结构
// EventRequest 将事件订阅统一归为EventRequest
message EventRequest {
  EventType type = 1;
  bytes payload = 2;
}

// BlockEventRequest 订阅区块请求
message BlockEventRequest {
  string bcname = 1;
  string proposer = 2;
  int64 start_height = 3;
  int64 end_height = 4;
  bool need_content = 5;
}

// TransactionEventRequest 订阅交易请求
message TransactionEventRequest {
  string bcname = 1;
  string initiator = 2;
  repeated string auth_require = 3;
  bool need_content = 4;
}

// AccountEventRequest 订阅账户请求
message AccountEventRequest {
  string from_addr = 1;
  string to_addr = 2;
  bool need_content = 3;
}

// UnsubscribeRequest 取消事件订阅请求
message UnsubscribeRequest {
  string id = 1;
}

//////// 事件订阅返回数据结构
/////// UnsubscribeResponse 取消订阅pb接口
message UnsubscribeResponse {
  string id = 1;
  UnsubscribeStatusInfo status = 3;
}

///// Event 将多种事件订阅回复统一为Event, 易于扩展
message Event {
  string id = 1;
  EventType type = 2;
  bytes payload = 3;
}

// BlockEvent 订阅区块返回
message BlockEvent {
  BlockStatusInfo status = 1;
  InternalBlock block = 2;
}

// TransactionEvent 订阅交易返回
message TransactionEvent {
  TransactionStatusInfo status = 1;
  Transaction tx = 2;
}

// AccountEvent 订阅账户返回
message AccountEvent {
  AccountStatusInfo status = 1;
  Transaction tx = 2;
}
