// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.7.1
// source: message.proto

package xuperp2p

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type XuperMessage_MessageType int32

const (
	XuperMessage_SENDBLOCK                XuperMessage_MessageType = 0
	XuperMessage_POSTTX                   XuperMessage_MessageType = 1
	XuperMessage_BATCHPOSTTX              XuperMessage_MessageType = 2
	XuperMessage_GET_BLOCK                XuperMessage_MessageType = 3
	XuperMessage_PING                     XuperMessage_MessageType = 4
	XuperMessage_GET_BLOCKCHAINSTATUS     XuperMessage_MessageType = 5
	XuperMessage_GET_BLOCK_RES            XuperMessage_MessageType = 6
	XuperMessage_GET_BLOCKCHAINSTATUS_RES XuperMessage_MessageType = 7
	// 向邻近确认区块是否为最新状态区块
	XuperMessage_CONFIRM_BLOCKCHAINSTATUS     XuperMessage_MessageType = 8
	XuperMessage_CONFIRM_BLOCKCHAINSTATUS_RES XuperMessage_MessageType = 9
	XuperMessage_MSG_TYPE_NONE                XuperMessage_MessageType = 10
	// query RPC port information
	XuperMessage_GET_RPC_PORT     XuperMessage_MessageType = 11
	XuperMessage_GET_RPC_PORT_RES XuperMessage_MessageType = 12
	// get authentication information
	XuperMessage_GET_AUTHENTICATION     XuperMessage_MessageType = 13
	XuperMessage_GET_AUTHENTICATION_RES XuperMessage_MessageType = 14
	// chained-bft NEW_VIEW message
	XuperMessage_CHAINED_BFT_NEW_VIEW_MSG XuperMessage_MessageType = 15
	// chained-bft NEW_PROPOSAL message
	XuperMessage_CHAINED_BFT_NEW_PROPOSAL_MSG XuperMessage_MessageType = 16
	// chained-bft vote message
	XuperMessage_CHAINED_BFT_VOTE_MSG XuperMessage_MessageType = 17
	// broadcast new block id to other node
	XuperMessage_NEW_BLOCKID XuperMessage_MessageType = 18
	// new node used to add to network automatic
	XuperMessage_NEW_NODE XuperMessage_MessageType = 19
)

// Enum value maps for XuperMessage_MessageType.
var (
	XuperMessage_MessageType_name = map[int32]string{
		0:  "SENDBLOCK",
		1:  "POSTTX",
		2:  "BATCHPOSTTX",
		3:  "GET_BLOCK",
		4:  "PING",
		5:  "GET_BLOCKCHAINSTATUS",
		6:  "GET_BLOCK_RES",
		7:  "GET_BLOCKCHAINSTATUS_RES",
		8:  "CONFIRM_BLOCKCHAINSTATUS",
		9:  "CONFIRM_BLOCKCHAINSTATUS_RES",
		10: "MSG_TYPE_NONE",
		11: "GET_RPC_PORT",
		12: "GET_RPC_PORT_RES",
		13: "GET_AUTHENTICATION",
		14: "GET_AUTHENTICATION_RES",
		15: "CHAINED_BFT_NEW_VIEW_MSG",
		16: "CHAINED_BFT_NEW_PROPOSAL_MSG",
		17: "CHAINED_BFT_VOTE_MSG",
		18: "NEW_BLOCKID",
		19: "NEW_NODE",
	}
	XuperMessage_MessageType_value = map[string]int32{
		"SENDBLOCK":                    0,
		"POSTTX":                       1,
		"BATCHPOSTTX":                  2,
		"GET_BLOCK":                    3,
		"PING":                         4,
		"GET_BLOCKCHAINSTATUS":         5,
		"GET_BLOCK_RES":                6,
		"GET_BLOCKCHAINSTATUS_RES":     7,
		"CONFIRM_BLOCKCHAINSTATUS":     8,
		"CONFIRM_BLOCKCHAINSTATUS_RES": 9,
		"MSG_TYPE_NONE":                10,
		"GET_RPC_PORT":                 11,
		"GET_RPC_PORT_RES":             12,
		"GET_AUTHENTICATION":           13,
		"GET_AUTHENTICATION_RES":       14,
		"CHAINED_BFT_NEW_VIEW_MSG":     15,
		"CHAINED_BFT_NEW_PROPOSAL_MSG": 16,
		"CHAINED_BFT_VOTE_MSG":         17,
		"NEW_BLOCKID":                  18,
		"NEW_NODE":                     19,
	}
)

func (x XuperMessage_MessageType) Enum() *XuperMessage_MessageType {
	p := new(XuperMessage_MessageType)
	*p = x
	return p
}

func (x XuperMessage_MessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (XuperMessage_MessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_message_proto_enumTypes[0].Descriptor()
}

func (XuperMessage_MessageType) Type() protoreflect.EnumType {
	return &file_message_proto_enumTypes[0]
}

func (x XuperMessage_MessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use XuperMessage_MessageType.Descriptor instead.
func (XuperMessage_MessageType) EnumDescriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{0, 0}
}

type XuperMessage_ErrorType int32

const (
	// success
	XuperMessage_SUCCESS XuperMessage_ErrorType = 0
	XuperMessage_NONE    XuperMessage_ErrorType = 1
	// common error
	XuperMessage_UNKNOW_ERROR             XuperMessage_ErrorType = 2
	XuperMessage_CHECK_SUM_ERROR          XuperMessage_ErrorType = 3
	XuperMessage_UNMARSHAL_MSG_BODY_ERROR XuperMessage_ErrorType = 4
	XuperMessage_CONNECT_REFUSE           XuperMessage_ErrorType = 5
	// block error
	XuperMessage_GET_BLOCKCHAIN_ERROR           XuperMessage_ErrorType = 6
	XuperMessage_BLOCKCHAIN_NOTEXIST            XuperMessage_ErrorType = 7
	XuperMessage_GET_BLOCK_ERROR                XuperMessage_ErrorType = 8
	XuperMessage_CONFIRM_BLOCKCHAINSTATUS_ERROR XuperMessage_ErrorType = 9
	XuperMessage_GET_AUTHENTICATION_ERROR       XuperMessage_ErrorType = 10
	XuperMessage_GET_AUTHENTICATION_NOT_PASS    XuperMessage_ErrorType = 11
)

// Enum value maps for XuperMessage_ErrorType.
var (
	XuperMessage_ErrorType_name = map[int32]string{
		0:  "SUCCESS",
		1:  "NONE",
		2:  "UNKNOW_ERROR",
		3:  "CHECK_SUM_ERROR",
		4:  "UNMARSHAL_MSG_BODY_ERROR",
		5:  "CONNECT_REFUSE",
		6:  "GET_BLOCKCHAIN_ERROR",
		7:  "BLOCKCHAIN_NOTEXIST",
		8:  "GET_BLOCK_ERROR",
		9:  "CONFIRM_BLOCKCHAINSTATUS_ERROR",
		10: "GET_AUTHENTICATION_ERROR",
		11: "GET_AUTHENTICATION_NOT_PASS",
	}
	XuperMessage_ErrorType_value = map[string]int32{
		"SUCCESS":                        0,
		"NONE":                           1,
		"UNKNOW_ERROR":                   2,
		"CHECK_SUM_ERROR":                3,
		"UNMARSHAL_MSG_BODY_ERROR":       4,
		"CONNECT_REFUSE":                 5,
		"GET_BLOCKCHAIN_ERROR":           6,
		"BLOCKCHAIN_NOTEXIST":            7,
		"GET_BLOCK_ERROR":                8,
		"CONFIRM_BLOCKCHAINSTATUS_ERROR": 9,
		"GET_AUTHENTICATION_ERROR":       10,
		"GET_AUTHENTICATION_NOT_PASS":    11,
	}
)

func (x XuperMessage_ErrorType) Enum() *XuperMessage_ErrorType {
	p := new(XuperMessage_ErrorType)
	*p = x
	return p
}

func (x XuperMessage_ErrorType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (XuperMessage_ErrorType) Descriptor() protoreflect.EnumDescriptor {
	return file_message_proto_enumTypes[1].Descriptor()
}

func (XuperMessage_ErrorType) Type() protoreflect.EnumType {
	return &file_message_proto_enumTypes[1]
}

func (x XuperMessage_ErrorType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use XuperMessage_ErrorType.Descriptor instead.
func (XuperMessage_ErrorType) EnumDescriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{0, 1}
}

// XuperMessage is the message of Xuper p2p server
type XuperMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *XuperMessage_MessageHeader `protobuf:"bytes,1,opt,name=Header,proto3" json:"Header,omitempty"`
	Data   *XuperMessage_MessageData   `protobuf:"bytes,2,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (x *XuperMessage) Reset() {
	*x = XuperMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XuperMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XuperMessage) ProtoMessage() {}

func (x *XuperMessage) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XuperMessage.ProtoReflect.Descriptor instead.
func (*XuperMessage) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{0}
}

func (x *XuperMessage) GetHeader() *XuperMessage_MessageHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *XuperMessage) GetData() *XuperMessage_MessageData {
	if x != nil {
		return x.Data
	}
	return nil
}

// MessageHeader is the message header of Xuper p2p server
type XuperMessage_MessageHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	// dataCheckSum is the message data checksum, it can be used check where the message have been received
	Logid          string                   `protobuf:"bytes,2,opt,name=logid,proto3" json:"logid,omitempty"`
	From           string                   `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	Bcname         string                   `protobuf:"bytes,4,opt,name=bcname,proto3" json:"bcname,omitempty"`
	Type           XuperMessage_MessageType `protobuf:"varint,5,opt,name=type,proto3,enum=xuperp2p.XuperMessage_MessageType" json:"type,omitempty"`
	DataCheckSum   uint32                   `protobuf:"varint,6,opt,name=dataCheckSum,proto3" json:"dataCheckSum,omitempty"`
	ErrorType      XuperMessage_ErrorType   `protobuf:"varint,7,opt,name=errorType,proto3,enum=xuperp2p.XuperMessage_ErrorType" json:"errorType,omitempty"`
	EnableCompress bool                     `protobuf:"varint,8,opt,name=enableCompress,proto3" json:"enableCompress,omitempty"`
}

func (x *XuperMessage_MessageHeader) Reset() {
	*x = XuperMessage_MessageHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XuperMessage_MessageHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XuperMessage_MessageHeader) ProtoMessage() {}

func (x *XuperMessage_MessageHeader) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XuperMessage_MessageHeader.ProtoReflect.Descriptor instead.
func (*XuperMessage_MessageHeader) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{0, 0}
}

func (x *XuperMessage_MessageHeader) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *XuperMessage_MessageHeader) GetLogid() string {
	if x != nil {
		return x.Logid
	}
	return ""
}

func (x *XuperMessage_MessageHeader) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *XuperMessage_MessageHeader) GetBcname() string {
	if x != nil {
		return x.Bcname
	}
	return ""
}

func (x *XuperMessage_MessageHeader) GetType() XuperMessage_MessageType {
	if x != nil {
		return x.Type
	}
	return XuperMessage_SENDBLOCK
}

func (x *XuperMessage_MessageHeader) GetDataCheckSum() uint32 {
	if x != nil {
		return x.DataCheckSum
	}
	return 0
}

func (x *XuperMessage_MessageHeader) GetErrorType() XuperMessage_ErrorType {
	if x != nil {
		return x.ErrorType
	}
	return XuperMessage_SUCCESS
}

func (x *XuperMessage_MessageHeader) GetEnableCompress() bool {
	if x != nil {
		return x.EnableCompress
	}
	return false
}

// MessageData is the message data of Xuper p2p server
type XuperMessage_MessageData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// msgInfo is the message infomation, use protobuf coding style
	MsgInfo []byte `protobuf:"bytes,3,opt,name=msgInfo,proto3" json:"msgInfo,omitempty"`
}

func (x *XuperMessage_MessageData) Reset() {
	*x = XuperMessage_MessageData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XuperMessage_MessageData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XuperMessage_MessageData) ProtoMessage() {}

func (x *XuperMessage_MessageData) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XuperMessage_MessageData.ProtoReflect.Descriptor instead.
func (*XuperMessage_MessageData) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{0, 1}
}

func (x *XuperMessage_MessageData) GetMsgInfo() []byte {
	if x != nil {
		return x.MsgInfo
	}
	return nil
}

var File_message_proto protoreflect.FileDescriptor

var file_message_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x08, 0x78, 0x75, 0x70, 0x65, 0x72, 0x70, 0x32, 0x70, 0x22, 0xd0, 0x09, 0x0a, 0x0c, 0x58, 0x75,
	0x70, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3c, 0x0a, 0x06, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x78, 0x75, 0x70,
	0x65, 0x72, 0x70, 0x32, 0x70, 0x2e, 0x58, 0x75, 0x70, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x52, 0x06, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x36, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x78, 0x75, 0x70, 0x65, 0x72, 0x70, 0x32,
	0x70, 0x2e, 0x58, 0x75, 0x70, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61,
	0x1a, 0xaf, 0x02, 0x0a, 0x0d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x6f, 0x67, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f, 0x67,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x63, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x63, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x36,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x78,
	0x75, 0x70, 0x65, 0x72, 0x70, 0x32, 0x70, 0x2e, 0x58, 0x75, 0x70, 0x65, 0x72, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x53, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x64, 0x61,
	0x74, 0x61, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x75, 0x6d, 0x12, 0x3e, 0x0a, 0x09, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e,
	0x78, 0x75, 0x70, 0x65, 0x72, 0x70, 0x32, 0x70, 0x2e, 0x58, 0x75, 0x70, 0x65, 0x72, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0e, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x1a, 0x27, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xc5, 0x03, 0x0a, 0x0b,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x53,
	0x45, 0x4e, 0x44, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x4f,
	0x53, 0x54, 0x54, 0x58, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x42, 0x41, 0x54, 0x43, 0x48, 0x50,
	0x4f, 0x53, 0x54, 0x54, 0x58, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x47, 0x45, 0x54, 0x5f, 0x42,
	0x4c, 0x4f, 0x43, 0x4b, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x50, 0x49, 0x4e, 0x47, 0x10, 0x04,
	0x12, 0x18, 0x0a, 0x14, 0x47, 0x45, 0x54, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x43, 0x48, 0x41,
	0x49, 0x4e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x10, 0x05, 0x12, 0x11, 0x0a, 0x0d, 0x47, 0x45,
	0x54, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x52, 0x45, 0x53, 0x10, 0x06, 0x12, 0x1c, 0x0a,
	0x18, 0x47, 0x45, 0x54, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x43, 0x48, 0x41, 0x49, 0x4e, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x52, 0x45, 0x53, 0x10, 0x07, 0x12, 0x1c, 0x0a, 0x18, 0x43,
	0x4f, 0x4e, 0x46, 0x49, 0x52, 0x4d, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x43, 0x48, 0x41, 0x49,
	0x4e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x10, 0x08, 0x12, 0x20, 0x0a, 0x1c, 0x43, 0x4f, 0x4e,
	0x46, 0x49, 0x52, 0x4d, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x43, 0x48, 0x41, 0x49, 0x4e, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x52, 0x45, 0x53, 0x10, 0x09, 0x12, 0x11, 0x0a, 0x0d, 0x4d,
	0x53, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x0a, 0x12, 0x10,
	0x0a, 0x0c, 0x47, 0x45, 0x54, 0x5f, 0x52, 0x50, 0x43, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x10, 0x0b,
	0x12, 0x14, 0x0a, 0x10, 0x47, 0x45, 0x54, 0x5f, 0x52, 0x50, 0x43, 0x5f, 0x50, 0x4f, 0x52, 0x54,
	0x5f, 0x52, 0x45, 0x53, 0x10, 0x0c, 0x12, 0x16, 0x0a, 0x12, 0x47, 0x45, 0x54, 0x5f, 0x41, 0x55,
	0x54, 0x48, 0x45, 0x4e, 0x54, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x0d, 0x12, 0x1a,
	0x0a, 0x16, 0x47, 0x45, 0x54, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x45, 0x4e, 0x54, 0x49, 0x43, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x53, 0x10, 0x0e, 0x12, 0x1c, 0x0a, 0x18, 0x43, 0x48,
	0x41, 0x49, 0x4e, 0x45, 0x44, 0x5f, 0x42, 0x46, 0x54, 0x5f, 0x4e, 0x45, 0x57, 0x5f, 0x56, 0x49,
	0x45, 0x57, 0x5f, 0x4d, 0x53, 0x47, 0x10, 0x0f, 0x12, 0x20, 0x0a, 0x1c, 0x43, 0x48, 0x41, 0x49,
	0x4e, 0x45, 0x44, 0x5f, 0x42, 0x46, 0x54, 0x5f, 0x4e, 0x45, 0x57, 0x5f, 0x50, 0x52, 0x4f, 0x50,
	0x4f, 0x53, 0x41, 0x4c, 0x5f, 0x4d, 0x53, 0x47, 0x10, 0x10, 0x12, 0x18, 0x0a, 0x14, 0x43, 0x48,
	0x41, 0x49, 0x4e, 0x45, 0x44, 0x5f, 0x42, 0x46, 0x54, 0x5f, 0x56, 0x4f, 0x54, 0x45, 0x5f, 0x4d,
	0x53, 0x47, 0x10, 0x11, 0x12, 0x0f, 0x0a, 0x0b, 0x4e, 0x45, 0x57, 0x5f, 0x42, 0x4c, 0x4f, 0x43,
	0x4b, 0x49, 0x44, 0x10, 0x12, 0x12, 0x0c, 0x0a, 0x08, 0x4e, 0x45, 0x57, 0x5f, 0x4e, 0x4f, 0x44,
	0x45, 0x10, 0x13, 0x22, 0xa6, 0x02, 0x0a, 0x09, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x00, 0x12, 0x08,
	0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x48,
	0x45, 0x43, 0x4b, 0x5f, 0x53, 0x55, 0x4d, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x03, 0x12,
	0x1c, 0x0a, 0x18, 0x55, 0x4e, 0x4d, 0x41, 0x52, 0x53, 0x48, 0x41, 0x4c, 0x5f, 0x4d, 0x53, 0x47,
	0x5f, 0x42, 0x4f, 0x44, 0x59, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x04, 0x12, 0x12, 0x0a,
	0x0e, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x5f, 0x52, 0x45, 0x46, 0x55, 0x53, 0x45, 0x10,
	0x05, 0x12, 0x18, 0x0a, 0x14, 0x47, 0x45, 0x54, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x43, 0x48,
	0x41, 0x49, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x06, 0x12, 0x17, 0x0a, 0x13, 0x42,
	0x4c, 0x4f, 0x43, 0x4b, 0x43, 0x48, 0x41, 0x49, 0x4e, 0x5f, 0x4e, 0x4f, 0x54, 0x45, 0x58, 0x49,
	0x53, 0x54, 0x10, 0x07, 0x12, 0x13, 0x0a, 0x0f, 0x47, 0x45, 0x54, 0x5f, 0x42, 0x4c, 0x4f, 0x43,
	0x4b, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x08, 0x12, 0x22, 0x0a, 0x1e, 0x43, 0x4f, 0x4e,
	0x46, 0x49, 0x52, 0x4d, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x43, 0x48, 0x41, 0x49, 0x4e, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x09, 0x12, 0x1c, 0x0a,
	0x18, 0x47, 0x45, 0x54, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x45, 0x4e, 0x54, 0x49, 0x43, 0x41, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x0a, 0x12, 0x1f, 0x0a, 0x1b, 0x47,
	0x45, 0x54, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x45, 0x4e, 0x54, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x50, 0x41, 0x53, 0x53, 0x10, 0x0b, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_message_proto_rawDescOnce sync.Once
	file_message_proto_rawDescData = file_message_proto_rawDesc
)

func file_message_proto_rawDescGZIP() []byte {
	file_message_proto_rawDescOnce.Do(func() {
		file_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_message_proto_rawDescData)
	})
	return file_message_proto_rawDescData
}

var file_message_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_message_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_message_proto_goTypes = []interface{}{
	(XuperMessage_MessageType)(0),      // 0: xuperp2p.XuperMessage.MessageType
	(XuperMessage_ErrorType)(0),        // 1: xuperp2p.XuperMessage.ErrorType
	(*XuperMessage)(nil),               // 2: xuperp2p.XuperMessage
	(*XuperMessage_MessageHeader)(nil), // 3: xuperp2p.XuperMessage.MessageHeader
	(*XuperMessage_MessageData)(nil),   // 4: xuperp2p.XuperMessage.MessageData
}
var file_message_proto_depIdxs = []int32{
	3, // 0: xuperp2p.XuperMessage.Header:type_name -> xuperp2p.XuperMessage.MessageHeader
	4, // 1: xuperp2p.XuperMessage.Data:type_name -> xuperp2p.XuperMessage.MessageData
	0, // 2: xuperp2p.XuperMessage.MessageHeader.type:type_name -> xuperp2p.XuperMessage.MessageType
	1, // 3: xuperp2p.XuperMessage.MessageHeader.errorType:type_name -> xuperp2p.XuperMessage.ErrorType
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_message_proto_init() }
func file_message_proto_init() {
	if File_message_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_message_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XuperMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XuperMessage_MessageHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XuperMessage_MessageData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_message_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_message_proto_goTypes,
		DependencyIndexes: file_message_proto_depIdxs,
		EnumInfos:         file_message_proto_enumTypes,
		MessageInfos:      file_message_proto_msgTypes,
	}.Build()
	File_message_proto = out.File
	file_message_proto_rawDesc = nil
	file_message_proto_goTypes = nil
	file_message_proto_depIdxs = nil
}
